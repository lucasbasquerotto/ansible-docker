# - set_fact: { "{{ item.key }}": "{{ item.value }}" }
#   loop: "{{ cloud_handover | dict2items }}"
#   loop_control:
#     label: "{{ item.key }}"
#   when: cloud_handover is defined

- set_fact:
    main_do_cloud_instances: []

- name: '{{ main_do_title }} - define instances to be created'
  set_fact:
    main_do_cloud_instances: "{{ main_do_cloud_instances + [{ 'name': main_do_instance_name + '-' + main_do_region + '-' + ('%03d'  | format(main_do_item)), 'region_id': main_do_region, 'state': ((main_do_item | int) <= (main_do_instance_count | int)) | ternary('present', 'deleted') }] }}"
  loop: "{{ range(1, (main_do_instance_max | int) + 1) | list }}"
  loop_control:
    loop_var: main_do_item

- name: '{{ main_do_title }} - create droplets'
  include_role: 
    name: droplets
  vars:
    droplets_title: "{{ main_do_title }} - create droplets - {{ main_do_instance_group }}"
    droplets_hosts_group: "{{ main_do_instance_group }}"
    droplets_hosts_file: "{{ main_do_hosts_file }}"
    droplets_instance_type: "{{ main_do_instance_type }}"
    droplets_api_token: "{{ main_do_api_token }}"
    droplets_host_user: "{{ main_do_host_user }}"
    droplets_host_pass: "{{ main_do_host_pass }}"
    droplets_user_data: "{{ main_do_user_data }}"
    droplets_size_id: "{{ main_do_size_id }}"
    droplets_image_id: "{{ main_do_image_id }}"
    droplets_private_networking: "{{ main_do_private_networking }}"
    droplets_ipv6: "{{ main_do_ipv6 }}"
    droplets_wait_timeout: "{{ main_do_wait_timeout }}"
    droplets_tags: "{{ main_do_tags }}"
    droplets_host_data: "{{ main_do_host_data }}"
    droplets_list: "{{ main_do_cloud_instances }}"

- name: '{{ main_do_title }} - Define value of main_do_active_hosts'
  set_fact: 
    main_do_active_hosts: []
    main_do_active_hosts: "{{ main_do_active_hosts + [{ 'name': main_do_item.name, 'ip_address': main_do_item.ip_address }] }}"
  loop:
  - "{{ droplets_active }}"
  loop_control:
    loop_var: main_do_item