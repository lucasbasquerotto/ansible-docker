- set_fact: { "cloud_{{ cloud_item }}": "{{ cloud_vars[cloud_role + '_' + cloud_item] }}" }
  loop: 
  - "instance_type"
  - "title"
  - "hosts_file"
  - "host_user"
  - "host_pass"
  - "instance_group"
  loop_control:
    loop_var: cloud_item

- set_fact: { "{{ cloud_item.key }}": "{{ cloud_item.value }}" }
  loop: "{{ cloud_vars | dict2items }}"
  loop_control:
    loop_var: cloud_item
    label: "{{ cloud_item.key }}"

- name: '{{ cloud_title }} - execute role {{ cloud_role }}'
  include_role: 
    name: '{{ cloud_role }}'

- set_fact: 
    cloud_active_hosts: "{{ lookup('vars', cloud_role + '_active_hosts') }}"
    cloud_hosts_info: ""

- name: '{{ cloud_title }} - generate the hosts information with the instances ips'
  set_fact: 
    cloud_hosts_info: |
      {{ cloud_hosts_info | default('') }}
      {{ cloud_item.name }} ansible_host={{ cloud_item.ip_address }} ansible_user={{ cloud_host_user }} ansible_become_pass={{ cloud_host_pass }} instance_type={{ cloud_instance_type }}
  loop: "{{ cloud_active_hosts }}"
  loop_control:
    loop_var: cloud_item
    label: "{{ cloud_item.name }}"

- name: '{{ cloud_title }} - Update the hosts file with the generated hosts'
  blockinfile:
    path: "{{ cloud.vars.hosts_file }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ cloud_instance_group }}"
    insertafter: "\\[{{ cloud_instance_group }}\\]"
    block: "{{ cloud_hosts_info }}"

- name: '{{ cloud_title }} - refresh inventory'
  meta: refresh_inventory