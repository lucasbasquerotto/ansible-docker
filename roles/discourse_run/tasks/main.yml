- set_fact: { "discourse_run_{{ discourse_run_item.name }}": "{{ discourse_run_vars[discourse_run_item.name] | default(discourse_run_item.default) }}" }
  loop: 
  - { name: "name", default: "app" }
  - { name: "action", default: "rebuild" }
  - { name: "push", default: "false" }
  - { name: "push_credentials", default: {} }
  - { name: "push_owner", default: "" }
  - { name: "push_name", default: "" }
  - { name: "push_tag", default: "" }
  - { name: "output_path", default: "/tmp/main/discourse" }
  - { name: "output_file", default: "app.log" }
  - { name: "path", default: "/var/discourse" }
  loop_control:
    loop_var: discourse_run_item
    label: "{{ discourse_run_item.name }}"
    
- set_fact: 
    discourse_run_title: "discourse - {{ discourse_run_action }} {{ discourse_run_name }}"
    discourse_run_push_condition: "{{ discourse_run_push | default(false) }}"
    discourse_run_exists: false

- block:

  - set_fact: 
      discourse_run_registry_prefix: "{{ discourse_run_push_credentials.registry | ternary(discourse_run_push_credentials.registry + '/', '') }}"
      discourse_run_push_owner_prefix: "{{ discourse_run_push_owner | ternary(discourse_run_push_owner + '/', '') }}"

  - set_fact:
      discourse_run_push_local_repository: "{{ discourse_run_push_owner_prefix }}{{ discourse_run_push_name }}:{{ discourse_run_push_tag }}"
      discourse_run_push_remote_repository: "{{ discourse_run_registry_prefix }}{{ discourse_run_push_owner_prefix }}{{ discourse_run_push_name }}:{{ discourse_run_push_tag }}"

  - name: "{{ discourse_run_title }} - log into docker registry"
    become: yes
    docker_login:
    #   registry: "{{ discourse_run_push_credentials.registry }}"
      username: "{{ discourse_run_push_credentials.username }}"
      password: "{{ discourse_run_push_credentials.password }}"
      reauthorize: "{{ discourse_run_push_credentials.reauthorize }}"

  - name: "{{ discourse_run_title }} - verify docker remote image - move the cmd file"
    become: yes
    template: 
      src: "{{ discourse_run_cmd_file_src_dir }}/docker-tag-exists.sh"
      dest: "{{ discourse_run_cmd_file_dest_dir }}/docker-tag-exists"
      mode: 0750
    vars:
      discourse_run_tpl_registry_api_base_url: "{{ discourse_run_registry_api_base_url }}"
      discourse_run_tpl_repository: "{{ discourse_run_push_owner_prefix }}{{ discourse_run_push_name }}"
      discourse_run_tpl_version: "{{ discourse_run_push_tag }}"
      discourse_run_tpl_uname: "{{ discourse_run_push_credentials.username }}"
      discourse_run_tpl_upass: "{{ discourse_run_push_credentials.password }}"

  - name: "{{ discourse_run_title }} - verify docker remote image - run cmd"
    become: yes
    command: "{{ discourse_run_cmd_file_dest_dir }}/docker-tag-exists"
    args:
      chdir: "{{ discourse_run_cmd_file_dest_dir }}/"
    register: discourse_run_out

  - set_fact: 
      discourse_run_exists: "{{ discourse_run_out.stdout == '1' }}"

  when: discourse_run_push_condition | bool

- name: "{{ discourse_run_title }} - main action"
  include_role: 
    name: long_run
  vars:
    long_run_title: "{{ discourse_run_title }}"
    long_run_become: yes
    long_run_output_path: "{{ discourse_run_output_path }}"
    long_run_output_file: "{{ discourse_run_output_file }}"
    long_run_path: "{{ discourse_run_path }}"
    long_run_cmd: "./launcher {{ discourse_run_action }} {{ discourse_run_name }}"
  when: (discourse_run_action != 'bootstrap') or (not discourse_run_exists)

- block:

  - name: "{{ discourse_run_title }} - tag image"
    become: yes
    docker_image:
      name: "local_discourse/{{ discourse_run_name }}"
      repository: "{{ discourse_run_push_local_repository }}"
      source: "pull"

  - name: "{{ discourse_run_title }} - push tagged image to docker registry"
    become: yes
    docker_image:
      name: "{{ discourse_run_push_local_repository }}"
      source: "local"
      push: yes

  when: (discourse_run_push_condition | bool) and (not discourse_run_exists)