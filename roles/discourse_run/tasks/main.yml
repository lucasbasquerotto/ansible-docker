- name: "discourse_run - set_fact - args"
  set_fact: { "{{ discourse_run_key }}": "{{ discourse_run_value }}" }
  vars:
    discourse_run_key: "discourse_run_{{ discourse_run_item.name }}"
    discourse_run_value: >-
      {{ discourse_run_vars[discourse_run_item.name] | 
      default(discourse_run_item.default) }}
  loop: 
  - { name: "name", default: "app" }
  - { name: "action", default: "rebuild" }
  - { name: "push", default: "false" }
  - { name: "push_credentials", default: {} }
  - { name: "push_owner", default: "" }
  - { name: "push_name", default: "" }
  - { name: "push_tag", default: "" }
  - { name: "output_path", default: "/tmp/main/discourse" }
  - { name: "path", default: "/var/discourse" }
  - { name: "tmp_path", default: "/tmp/main/discourse/containers" }
  - { name: "dynamic_host_vars", default: [] }
  loop_control:
    loop_var: discourse_run_item
    label: "{{ discourse_run_item.name }}"
  
- name: "discourse_run - set_fact - new args"
  set_fact: 
    discourse_run_title: "discourse - {{ discourse_run_action }} {{ discourse_run_name }}"
    discourse_run_output_file: "{{ discourse_run_name }}.log"
    discourse_run_push_condition: "{{ discourse_run_push | default(false) }}"
    discourse_run_exists: false
    discourse_run_registry: >-
      {{ discourse_run_push_credentials.registry | default(discourse_run_registry_default) }}
    discourse_run_api_base_url: >-
      {{ 
      discourse_run_push_credentials.api_base_url | 
      default(discourse_run_api_base_url_default) 
      }}

- block:

  - name: "{{ discourse_run_title }} - set_fact"
    set_fact: 
      discourse_run_push_owner_prefix: >-
        {{ discourse_run_push_owner | ternary(discourse_run_push_owner + '/', '') }}

  - name: "{{ discourse_run_title }} - set_fact"
    set_fact:
      discourse_run_push_local_repository: >-
        {{ discourse_run_push_owner_prefix }}{{ ''
        }}{{ discourse_run_push_name }}:{{ discourse_run_push_tag }}
      discourse_run_push_remote_repository: >-
        {{ discourse_run_registry }}{{ ''
        }}{{ discourse_run_push_owner_prefix }}{{ ''
        }}{{ discourse_run_push_name }}:{{ discourse_run_push_tag }}

  - name: "{{ discourse_run_title }} - log into docker registry"
    become: yes
    docker_login:
      registry: "{{ discourse_run_push_credentials.registry }}"
      username: "{{ discourse_run_push_credentials.username }}"
      password: "{{ discourse_run_push_credentials.password }}"
      reauthorize: "{{ discourse_run_push_credentials.reauthorize }}"

  - name: "{{ discourse_run_title }} - verify docker remote image - move the cmd file"
    become: yes
    template: 
      src: "{{ discourse_run_cmd_file_src_dir }}/docker-tag-exists.sh"
      dest: "{{ discourse_run_cmd_file_dest_dir }}/docker-tag-exists"
      mode: 0750
    vars:
      discourse_run_tpl_registry_api_base_url: "{{ discourse_run_api_base_url }}"
      discourse_run_tpl_repository: >-
        "{{ discourse_run_push_owner_prefix }}{{ discourse_run_push_name }}"
      discourse_run_tpl_version: "{{ discourse_run_push_tag }}"
      discourse_run_tpl_uname: "{{ discourse_run_push_credentials.username }}"
      discourse_run_tpl_upass: "{{ discourse_run_push_credentials.password }}"

  - name: "{{ discourse_run_title }} - verify if docker remote image tag exists"
    become: yes
    command: "{{ discourse_run_cmd_file_dest_dir }}/docker-tag-exists"
    args:
      chdir: "{{ discourse_run_cmd_file_dest_dir }}/"
    register: discourse_run_out

  - name: "{{ discourse_run_title }} - set_fact"
    set_fact: 
      discourse_run_exists: "{{ discourse_run_out.stdout == '1' }}"

  when: discourse_run_push_condition | bool
    
- name: "{{ discourse_run_title }} - set_fact"
  set_fact: 
    discourse_run_env_file: >-
      {{ discourse_run_path }}/containers/{{ discourse_run_name }}.yml
    discourse_run_env_file_tmp: >-
      {{ discourse_run_tmp_path }}/{{ discourse_run_name }}.yml

- name: >-
    {{ discourse_run_title }} - create the temporary directory 
    '{{ discourse_run_tmp_path }}'
  become: yes
  file:
    path: "{{ discourse_run_tmp_path }}"
    state: directory
    owner: "{{ discourse_run_host_user }}"
    group: "{{ discourse_run_host_group }}"
    mode: 0751

- name: >-
    {{ discourse_run_title }} - create empty env file into temporary directory
    if there is no file there
  become: yes
  copy: 
    force: no
    content: ""
    dest: "{{ discourse_run_env_file_tmp }}"
    owner: "{{ discourse_run_host_user }}"
    group: "{{ discourse_run_host_group }}"
    mode: 0640

- name: "{{ discourse_run_title }} - get the difference of two files (old and current)"
  become: yes
  command: "diff {{ discourse_run_env_file }} {{ discourse_run_env_file_tmp }}"
  register: discourse_run_diff
  failed_when: discourse_run_diff.rc > 1
  changed_when: discourse_run_diff.rc == 1

- block:

  - name: "{{ discourse_run_title }} - Wait for external hosts to be accessible"
    wait_for:
      host: "{{ discourse_run_host }}"
      port: "{{ discourse_run_item.port | int }}"
      connect_timeout: 3
      delay: 3
      timeout: 600
    vars:
      discourse_run_host: >-
        {{ hostvars[
        groups[
        discourse_run_cloud[
        discourse_run_item.instance_type].vars.cloud.instance_type][
        ((discourse_run_index | int) *
        ((discourse_run_cloud[
        discourse_run_item.instance_type].vars.cloud.instance_max | int) / 
        (discourse_run_instance_max | int))) 
        | int]
        ][discourse_run_item.hostvar] | default('') }}
    loop: "{{ discourse_run_dynamic_host_vars | default([]) }}"
    loop_control:
      loop_var: discourse_run_item
      label: "{{ discourse_run_item.name }}"
    when: discourse_run_item.port is defined

  - name: "{{ discourse_run_title }} - main action"
    include_role: 
      name: long_run
    vars:
      long_run_title: "{{ discourse_run_title }}"
      long_run_become: yes
      long_run_output_path: "{{ discourse_run_output_path }}"
      long_run_output_file: "{{ discourse_run_output_file }}"
      long_run_tmp_path: "{{ discourse_run_tmp_path }}"
      long_run_tmp_file: "{{ discourse_run_tmp_file }}"
      long_run_tmp_path: "{{ compose_run_base_dir }}/data/tmp"
      long_run_tmp_file: "env-run-setup"
      long_run_path: "{{ discourse_run_path }}"
      long_run_cmd: "./launcher {{ discourse_run_action }} {{ discourse_run_name }}"

  when: >-
    discourse_run_diff.changed and 
    ((discourse_run_action != 'bootstrap') or (not discourse_run_exists))

- block:

  - name: "{{ discourse_run_title }} - tag image"
    become: yes
    docker_image:
      name: "local_discourse/{{ discourse_run_name }}"
      repository: "{{ discourse_run_push_local_repository }}"
      source: "pull"

  - name: "{{ discourse_run_title }} - push tagged image to docker registry"
    become: yes
    docker_image:
      name: "{{ discourse_run_push_local_repository }}"
      source: "local"
      push: yes

  when: >-
    discourse_run_diff.changed and 
    (discourse_run_push_condition | bool) and 
    (not discourse_run_exists)

- name: "{{ discourse_run_title }} - copy env file into temporary directory"
  become: yes
  copy: 
    remote_src: yes
    src: "{{ discourse_run_env_file }}"
    dest: "{{ discourse_run_env_file_tmp }}"
    owner: "{{ discourse_run_host_user }}"
    group: "{{ discourse_run_host_group }}"
    mode: 0640
  when: discourse_run_diff.changed