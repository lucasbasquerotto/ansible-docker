- block:

  - name: >-
      {{ digital_ocean_title }} - create the temporary directory 
      '{{ digital_ocean_tmp_dir }}'
    file:
      path: "{{ digital_ocean_tmp_dir }}"
      state: directory
      mode: 0751

  - name: "{{ digital_ocean_title }} - tags tmp file src"
    copy: 
      content: "{{ digital_ocean_all_tags | default([]) }}" 
      dest: "{{ digital_ocean_tmp_file_tags_src }}"

  - name: "{{ digital_ocean_title }} - tags tmp file dest if empty"
    copy: 
      force: no
      content: ""
      dest: "{{ digital_ocean_tmp_file_tags_dest }}"
      mode: 0640

  - name: "{{ digital_ocean_title }} - get the difference of two files (old and current)"
    command: >-
      diff {{ digital_ocean_tmp_file_tags_src }} {{ digital_ocean_tmp_file_tags_dest }}
    register: digital_ocean_diff
    failed_when: digital_ocean_diff.rc > 1
    changed_when: digital_ocean_diff.rc == 1

  - name: "{{ digital_ocean_title }} - create tags"
    digital_ocean_tag:
      api_token: "{{ digital_ocean_api_token }}"
      name: "{{ digital_ocean_item }}"
      state: "present"
    loop: "{{ digital_ocean_all_tags | default([]) }}"
    loop_control:
      loop_var: digital_ocean_item
    when: digital_ocean_diff.changed and ((digital_ocean_instance_count | int) > 0)
    tags: ["print_action"]

  - name: "{{ digital_ocean_title }} - tags tmp file dest"
    copy: 
      remote_src: yes
      src: "{{ digital_ocean_tmp_file_tags_src }}" 
      dest: "{{ digital_ocean_tmp_file_tags_dest }}"
      mode: 0640
    when: digital_ocean_diff.changed

  - name: "{{ digital_ocean_title }} - firewalls tmp file src"
    copy: 
      content: "{{ digital_ocean_all_firewalls | default([]) }}" 
      dest: "{{ digital_ocean_tmp_file_firewalls_src }}"

  - name: "{{ digital_ocean_title }} - firewalls tmp file dest if empty"
    copy: 
      force: no
      content: ""
      dest: "{{ digital_ocean_tmp_file_firewalls_dest }}"
      mode: 0640

  - name: "{{ digital_ocean_title }} - get the difference of two files (old and current)"
    command: >-
      diff 
      {{ digital_ocean_tmp_file_firewalls_src }} 
      {{ digital_ocean_tmp_file_firewalls_dest }}
    register: digital_ocean_diff
    failed_when: digital_ocean_diff.rc > 1
    changed_when: digital_ocean_diff.rc == 1

  - name: "{{ digital_ocean_title }} - create firewalls"
    digital_ocean_firewall:
      api_token: "{{ digital_ocean_api_token }}"
      name: "{{ digital_ocean_item.name }}"
      state: "present"
      droplet_ids: "{{ digital_ocean_item.droplet_ids | default([]) }}"
      tags: "{{ digital_ocean_item.tags | default([]) }}"
      inbound_rules: "{{ digital_ocean_item.inbound_rules | default([]) }}"
      outbound_rules: "{{ digital_ocean_item.outbound_rules | default([]) }}"
    loop: "{{ digital_ocean_all_firewalls | default([]) }}"
    loop_control:
      loop_var: digital_ocean_item
      label: "{{ digital_ocean_item.name }}"
    when: digital_ocean_diff.changed and ((digital_ocean_instance_count | int) > 0)
    tags: ["print_action"]

  - name: "{{ digital_ocean_title }} - firewalls tmp file dest"
    copy: 
      remote_src: yes
      src: "{{ digital_ocean_tmp_file_firewalls_src }}" 
      dest: "{{ digital_ocean_tmp_file_firewalls_dest }}"
      mode: 0640
    when: digital_ocean_diff.changed

  when: not (digital_ocean_shutdown | bool)

- set_fact:
    digital_ocean_cloud_instances: []

- name: "{{ digital_ocean_title }} - define instances to be created"
  set_fact:
    digital_ocean_cloud_instances: >-
      {{ digital_ocean_cloud_instances +
      [{ 'name':
      digital_ocean_instance_name + '-' +
      digital_ocean_region + '-' +
      ('%03d' | format(digital_ocean_item)),
      'region_id': digital_ocean_region,
      'state':
      (((digital_ocean_item | int) <= (digital_ocean_instance_count | int))
      and not (digital_ocean_shutdown | bool)) | ternary('present', 'absent') }] }}
  loop: "{{ range(1, (digital_ocean_instance_max | int) + 1) | list }}"
  loop_control:
    loop_var: digital_ocean_item

- name: "{{ digital_ocean_title }} - define digital_ocean_user_data"
  set_fact:
    digital_ocean_user_data: >-
      {{ lookup(
      'template', 
      digital_ocean_user_data_file, 
      template_vars=dict(digital_ocean_host_vars)
      ) | trim 
      }}
  when: (digital_ocean_user_data_file is defined) and (digital_ocean_user_data_file != '')

- name: "{{ digital_ocean_title }} - create droplets"
  include_tasks: "droplets.yml"
  vars:
    digital_ocean_droplets_title: >-
      {{ digital_ocean_title }} - create droplets - {{ digital_ocean_instance_type }}
    digital_ocean_droplets_hosts_file: "{{ digital_ocean_hosts_file }}"
    digital_ocean_droplets_instance_type: "{{ digital_ocean_instance_type }}"
    digital_ocean_droplets_api_token: "{{ digital_ocean_api_token }}"
    digital_ocean_droplets_host_user: "{{ digital_ocean_host_user }}"
    digital_ocean_droplets_host_pass: "{{ digital_ocean_host_pass }}"
    digital_ocean_droplets_user_data: "{{ digital_ocean_user_data }}"
    digital_ocean_droplets_size_id: "{{ digital_ocean_instance_size }}"
    digital_ocean_droplets_image_id: "{{ digital_ocean_instance_image }}"
    digital_ocean_droplets_private_networking: "{{ digital_ocean_private_networking }}"
    digital_ocean_droplets_ipv6: "{{ digital_ocean_ipv6 }}"
    digital_ocean_droplets_wait_timeout: "{{ digital_ocean_wait_timeout }}"
    digital_ocean_droplets_tags: "{{ digital_ocean_tags }}"
    digital_ocean_droplets_host_data: "{{ digital_ocean_host_data }}"
    digital_ocean_droplets_list: "{{ digital_ocean_cloud_instances }}"

- name: "{{ digital_ocean_title }} - Init array digital_ocean_active_hosts"
  set_fact: 
    digital_ocean_active_hosts: []
    
- name: "{{ digital_ocean_title }} - Include items in digital_ocean_active_hosts"
  set_fact: 
    digital_ocean_active_hosts: >-
      {{ digital_ocean_active_hosts +
      [{ 'name': digital_ocean_item.name,
      'private_ip':
      (digital_ocean_item.networks.v4 |
      selectattr('type', 'equalto', 'private') |
      map(attribute='ip_address') | list | first | default('')),
      'public_ipv4':
      (digital_ocean_item.networks.v4 |
      selectattr('type', 'equalto', 'public') |
      map(attribute='ip_address') | list | first | default('')),
      'public_ipv6':
      (digital_ocean_item.networks.v6 |
      selectattr('type', 'equalto', 'public') |
      map(attribute='ip_address') | list | first | default('')) }] }}
  loop: "{{ digital_ocean_droplets_active }}"
  loop_control:
    loop_var: digital_ocean_item
    label: "{{ digital_ocean_item.name }}"
