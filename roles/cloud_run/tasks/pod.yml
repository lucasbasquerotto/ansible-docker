- set_fact:
    cloud_run_pod_repo_location: >-
      {{ 
      (cloud_run_cloud.type == 'local') | ternary(
      cloud_run_local_pod_dict[cloud_run_pod_id].dir
      | default(cloud_run_pod_base_dir + '/main'),
      cloud_run_pod_base_dir + '/main'
      )
      }}
    cloud_run_backup_file_src: >-
      {{ cloud_run_pod_base_dir }}/{{ cloud_run_env_vars_relative_file_src }}
    cloud_run_backup_file_dest: >-
      {{ cloud_run_pod_base_dir }}/{{ cloud_run_env_vars_relative_file_dest }}
  tags: ["no_print"]
    
- name: "{{ cloud_run_pod_title }} - create the backup directories"
  become: "{{ cloud_run_pod.root }}"
  file:
    path: "{{ cloud_run_pod_item | dirname }}"
    state: directory
    owner: "{{ cloud_run_host_user }}"
    group: "{{ cloud_run_host_group }}"
    mode: "{{ (cloud_run_cloud.type == 'local') | ternary(0777, 0751) }}"
  loop:
  - "{{ cloud_run_backup_file_src }}"
  - "{{ cloud_run_backup_file_dest }}"
  loop_control:
    loop_var: cloud_run_pod_item
    label: "{{ cloud_run_pod_item | dirname }}"
      
- name: >-
    {{ cloud_run_pod_title }} - create empty env file in backup directory
    if there is no file there
  become: "{{ cloud_run_pod.root }}"
  copy: 
    force: no
    content: ""
    dest: "{{ cloud_run_backup_file_dest }}"
    owner: "{{ cloud_run_host_user }}"
    group: "{{ cloud_run_host_group }}"
    mode: "{{ (cloud_run_cloud.type == 'local') | ternary(0666, 0640) }}"

- name: "{{ cloud_run_pod_title }} - get the difference of the 2 env files (old and current)"
  become: "{{ cloud_run_pod.root }}"
  command: "diff {{ cloud_run_backup_file_src }} {{ cloud_run_backup_file_dest }}"
  register: cloud_run_diff
  failed_when: cloud_run_diff.rc > 1
  changed_when: cloud_run_diff.rc == 1

- block:

  - name: "{{ cloud_run_pod_title }} - run the setup script"
    include_role: 
      name: long_run
    vars:
      long_run_title: "{{ cloud_run_pod_title }} - run the setup script"
      long_run_become: "{{ cloud_run_pod.root }}"
      long_run_output_path: "{{ cloud_run_pod_base_dir }}/data/log"
      long_run_output_file: "env-run-setup.log"
      long_run_tmp_path: "{{ cloud_run_pod_base_dir }}/data/tmp"
      long_run_tmp_file: "env-run-setup"
      long_run_path: "{{ cloud_run_pod_repo_location }}"
      long_run_cmd: "{{ cloud_run_pod.cmd }}"
    when: (cloud_run_pod.cmd | default('')) != ''
    tags: ["print_action"]

  - name: "{{ cloud_run_pod_title }} - environment run cmd"
    include_role: 
      name: long_run
    vars:
      long_run_title: >-
        {{ cloud_run_pod_title }} - environment run cmd - 
        {{ cloud_run_env_cmd | b64decode | trim 
        | regex_replace('\n', ' .. ') 
        | truncate(30, False, '...', 10) }}
      long_run_become: "{{ cloud_run_pod.root }}"
      long_run_output_path: "{{ cloud_run_pod_base_dir }}/data/log"
      long_run_output_file: "env-run.log"
      long_run_tmp_path: "{{ cloud_run_pod_base_dir }}/data/tmp"
      long_run_tmp_file: "env-run"
      long_run_path: "{{ cloud_run_pod_repo_location }}"
      long_run_cmd: "{{ cloud_run_env_cmd | b64decode | trim }}"
    when: (cloud_run_env_cmd | default('')) != ''
    tags: ["print_action"]
    
  - include_tasks: "{{ cloud_run_pod_orchestration.type }}.yml"
    vars:
      cloud_run_inner_title: >-
        {{ cloud_run_pod_title }} - {{ cloud_run_pod_orchestration.type }}
    when: cloud_run_pod_orchestration.type != 'none'
    
  - name: >-
      {{ cloud_run_pod_title }} - 
      backup the env context vars file 
      (to avoid running when the variables haven't changed)
    become: "{{ cloud_run_pod.root }}"
    copy: 
      remote_src: yes
      src: "{{ cloud_run_backup_file_src }}"
      dest: "{{ cloud_run_backup_file_dest }}"
      owner: "{{ cloud_run_host_user }}"
      group: "{{ cloud_run_host_group }}"
      mode: "{{ (cloud_run_cloud.type == 'local') | ternary(0666, 0640) }}"

  when: "cloud_run_diff.changed or (cloud_run_force | bool)" 

- name: "{{ cloud_run_pod_title }} - debug"
  debug: 
    msg: "variables unchanged"
  when: not cloud_run_diff.changed
  tags: ["print_action"]