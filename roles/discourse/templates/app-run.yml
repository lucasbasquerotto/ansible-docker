## this is the all-in-one, standalone Discourse Docker container template
##
## After making changes to this file, you MUST rebuild
## /var/discourse/launcher rebuild app
##
## BE *VERY* CAREFUL WHEN EDITING!
## YAML FILES ARE SUPER SUPER SENSITIVE TO MISTAKES IN WHITESPACE OR ALIGNMENT!
## visit http://www.yamllint.com/ to validate this file as needed

# {{ docker_git_repo }}@{{ docker_git_repo_version }}
base_image: "{{ base_image | default('local_discourse/app-build', true) }}"

templates:
  - "templates/postgres.template.yml"
  - "templates/redis.template.yml"
  - "templates/web.template.validate.yml"
  - "templates/web.template.run.yml"
  - "templates/web.ratelimited.template.yml"
## Uncomment these two lines if you wish to add Lets Encrypt (https)
  {{ use_ssl | ternary('', '#') }}- "templates/web.ssl.template.yml"
  {{ use_ssl | ternary('', '#') }}- "templates/web.letsencrypt.ssl.template.yml"
## Uncomment this line to add Cloudflare IPs to nginx
  {{ use_cf | ternary('', '#') }}- "templates/cloudflare.template.yml"

## which TCP/IP ports should this container expose?
## If you want Discourse to share a port with another webserver like Apache or nginx,
## see https://meta.discourse.org/t/17247 for details
expose:
  - "{{ http_port | default(80, true) }}:80"   # http
  - "{{ https_port | default(443, true) }}:443" # https

env:
  LANG: {{ lang | default('en_US.UTF-8', true) }}
  DISCOURSE_DEFAULT_LOCALE: {{ locale | default('en', true) }}

  ## How many concurrent web requests are supported? Depends on memory and CPU cores.
  ## will be set automatically by bootstrap based on detected CPUs, or you can override
  UNICORN_WORKERS: {{ workers | default(2, true) }}

  ## TODO: The domain name this Discourse instance will respond to
  ## Required. Discourse will not work with a bare IP number.
  DISCOURSE_HOSTNAME: {{ hostname }}

  ## Uncomment if you want the container to be started with the same
  ## hostname (-h option) as specified above (default "$hostname-$config")
  #DOCKER_USE_HOSTNAME: true

  ## TODO: List of comma delimited emails that will be made admin and developer
  ## on initial signup example 'user1@example.com,user2@example.com'
  DISCOURSE_DEVELOPER_EMAILS: '{{ email }}'

  ## TODO: The SMTP mail server used to validate new accounts and send notifications
  # SMTP ADDRESS, username, and password are required
  # WARNING the char '#' in SMTP password can cause problems!
  DISCOURSE_SMTP_ADDRESS: "{{ smtp_address }}"
  DISCOURSE_SMTP_PORT: {{ smtp_port }}
  DISCOURSE_SMTP_USER_NAME: "{{ smtp_user_name }}"
  DISCOURSE_SMTP_PASSWORD: "{{ smtp_pass }}"
  DISCOURSE_SMTP_ENABLE_START_TLS: {{ start_tls | default('true', true) }}

  ## If you added the Lets Encrypt template, uncomment below to get a free SSL certificate
  {{ use_ssl | ternary('', '#') }}LETSENCRYPT_ACCOUNT_EMAIL: {{ ssl_email | default('', true) }}

  ## The CDN address for this Discourse instance (configured to pull)
  ## see https://meta.discourse.org/t/14857 for details
  {{ use_cdn | ternary('', '#') }}DISCOURSE_CDN_URL: {{ cdn_url | default('', true) }}

  {{ force_https | ternary('', '#') }}DISCOURSE_FORCE_HTTPS: {{ force_https | default(false, true) }}  
  
  {{ enable_s3_uploads | ternary('', '#') }}DISCOURSE_ENABLE_S3_UPLOADS: {{ enable_s3_uploads | default(true, true) }}
  {{ s3_access_key_id | ternary('', '#') }}DISCOURSE_S3_ACCESS_KEY_ID: "{{ s3_access_key_id | default('', true) }}"
  {{ s3_secret_access_key | ternary('', '#') }}DISCOURSE_S3_SECRET_ACCESS_KEY: "{{ s3_secret_access_key | default('', true) }}"
  {{ s3_region | ternary('', '#') }}DISCOURSE_S3_REGION: "{{ s3_region | default('us-east-1', true) }}"
  {{ s3_upload_bucket | ternary('', '#') }}DISCOURSE_S3_UPLOAD_BUCKET: "{{ s3_upload_bucket | default('', true) }}"
  {{ s3_endpoint | ternary('', '#') }}DISCOURSE_S3_ENDPOINT: "{{ s3_endpoint | default('', true) }}"
  {{ s3_cdn_url | ternary('', '#') }}DISCOURSE_S3_CDN_URL: "{{ s3_cdn_url | default('', true) }}"

  {{ enable_backups | ternary('', '#') }}DISCOURSE_ENABLE_BACKUPS: {{ enable_backups | default(true, true) }}
  {{ backup_location | ternary('', '#') }}DISCOURSE_BACKUP_LOCATION: "{{ backup_location | default('', true) }}"
  {{ maximum_backups | ternary('', '#') }}DISCOURSE_MAXIMUM_BACKUPS: {{ maximum_backups | default(5, true) }}
  {{ backup_frequency | ternary('', '#') }}DISCOURSE_BACKUP_FREQUENCY: {{ backup_frequency | default(7, true) }}
  {{ s3_backup_bucket | ternary('', '#') }}DISCOURSE_S3_BACKUP_BUCKET: "{{ s3_backup_bucket | default('', true) }}"

## The Docker container is stateless; all data is stored in /shared
volumes:
  - volume:
      host: {{ host_shared_volume | default('/var/discourse/shared/app', true) }}
      guest: /shared
  - volume:
      host: {{ host_log_volume | default('/var/discourse/shared/app/log/var-log', true) }}
      guest: /var/log

## Any custom commands to run after building
run:
  - exec: echo "Beginning of custom commands"
  ## If you want to set the 'From' email address for your first registration, uncomment and change:
  ## After getting the first signup email, re-comment the line. It only needs to run once.
  #- exec: rails r "SiteSetting.notification_email='info@unconfigured.discourse.org'"
  - exec: echo "End of custom commands"
