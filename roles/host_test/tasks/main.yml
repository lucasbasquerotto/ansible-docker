
- name: "{{ host_test_title }} - generate node params"
  include_role:
    name: "params_mixer"
  vars:
    params_mixer_main_params: "{{ host_test_node.params | default({}) }}"
    params_mixer_group_params_names: "{{ host_test_node.group_params | default({}) }}"
    params_mixer_shared_params_names: "{{ host_test_node.shared_params | default([]) }}"
    params_mixer_shared_params_names_dict: "{{ host_test_node_shared_params_dict | default({}) }}"
    params_mixer_shared_group_params_name: "{{ host_test_node.shared_group_params | default('') }}"
    params_mixer_shared_group_params_names_dict: "{{ host_test_node_shared_group_params_dict | default({}) }}"
    params_mixer_params_dict: "{{ host_test_node_params_dict }}"

- name: "{{ host_test_title }}"
  set_fact:
    host_test_vars: "{{ params_mixer_params.host_test_dict[params_mixer_params.host_test_type] }}"
  tags: ["no_print"]

- name: "{{ host_test_title }}"
  set_fact:
    host_test_log_file: "{{ host_test_vars.log_file }}"
    host_test_setup_last_line: "{{ host_test_vars.setup_last_line }}"
    host_test_initial_connection_timeout: >-
      {{ host_test_vars.initial_connection_timeout }}
    host_test_setup_finished_timeout: >-
      {{ host_test_vars.setup_finished_timeout }}
  tags: ["no_print"]

- name: >
    {{ host_test_title }} - wait {{ host_test_initial_connection_timeout }}
    seconds for target connection to become reachable/usable
  wait_for_connection:
    delay: 0
    sleep: 1
    timeout: "{{ host_test_initial_connection_timeout }}"

- name: '{{ host_test_title }} - Gathering facts'
  setup:

- name: >
    {{ host_test_title }} - make sure the file "{{ host_test_log_file }}"
    has "{{ host_test_setup_last_line }}" in it
    (wait {{ host_test_setup_finished_timeout }} seconds)
  wait_for:
    delay: 0
    sleep: 1
    timeout: "{{ host_test_setup_finished_timeout }}"
    path: "{{ host_test_log_file }}"
    search_regex: "{{ host_test_setup_last_line }}"
    msg: >
      Timeout to find "{{ host_test_setup_last_line }}" 
      inside file "{{ host_test_log_file }}"

- name: '{{ host_test_title }} - retrieve last line of "{{ host_test_log_file }}"'
  shell: tail -n 1 "{{ host_test_log_file }}"
  register: host_test_last_line
  changed_when: False

- name: "{{ host_test_title }}"
  set_fact: host_test_last_line="{{ host_test_last_line.stdout }}"
  tags: ["no_print"]

- debug: msg="last_line='{{ host_test_last_line }}'"
  
- name: '{{ host_test_title }} - verify if the setup was finished successfully'
  fail: 
    msg: >
      Variable '{{ host_test_last_line }}' should be equal to 
      '{{ host_test_setup_last_line }}'
  when: host_test_last_line != host_test_setup_last_line