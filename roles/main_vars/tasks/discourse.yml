- set_fact:
    main_vars_cloud_shutdown: "{{ env.cloud_shutdown | default(0) }}"
    main_vars_cloud_user_data_file: "roles/main_cloud/templates/ubuntu-18.04.j2.sh"
    main_vars_env_name: "{{ env.name | ternary(env.name + '-', '') }}"
    main_vars_buckets_to_destroy: "{{ env.cloud_buckets_to_destroy | default([{ endpoint: None, access_key_id: None, secret_access_key: None, names: [] }]) }}"

- set_fact:
    main_vars_dns:
      cloudflare:
        task: "cloudflare_dns"
        zone: "{{ env.dns_zone | default('') }}"
        credentials:
          account_email: "{{ env.dns_cloudflare_email | default('') }}"
          account_api_token: "{{ env.dns_cloudflare_token | default('') }}"
        main_record: "{{ env.dns_record | default('') }}"
        static:
        - title: "DNS A records"
          type: "A"
          list: "{{ env.dns_a_list | default([]) }}"
        - title: "DNS CNAME records"
          type: "CNAME"
          list: "{{ env.dns_cname_list | default([]) }}"

- set_fact:
    main_vars_container_vars_default: "{{ (env.container_vars | default({})).default | default({}) }}"
    main_vars_container_vars_default_build: "{{ (env.container_vars | default({})).default_build | default({}) }}"
    main_vars_container_vars_default_run: "{{ (env.container_vars | default({})).default_run | default({}) }}"
    main_vars_container_vars_app_build: "{{ (env.container_vars | default({})).app_build | default({}) }}"
    main_vars_container_vars_app_run: "{{ (env.container_vars | default({})).app_run | default({}) }}"
    main_vars_container_vars_web_build: "{{ (env.container_vars | default({})).web_build | default({}) }}"
    main_vars_container_vars_web_run: "{{ (env.container_vars | default({})).web_run | default({}) }}"
    main_vars_container_vars_redis_master_run: "{{ (env.container_vars | default({})).redis_master_run | default({}) }}"
    main_vars_container_vars_db_master_run: "{{ (env.container_vars | default({})).db_master_run | default({}) }}"

- set_fact:
    main_vars_containers: 
      app_build: "{{ main_vars_container_vars_default | combine(main_vars_container_vars_default_build) | combine(main_vars_container_vars_app_build) }}"
      app_run: "{{ main_vars_container_vars_default | combine(main_vars_container_vars_default_run) | combine(main_vars_container_vars_app_run) }}"
      web_build: "{{ main_vars_container_vars_default | combine(main_vars_container_vars_default_build) | combine(main_vars_container_vars_web_build) }}"
      web_run: "{{ main_vars_container_vars_default | combine(main_vars_container_vars_default_run) | combine(main_vars_container_vars_web_run) }}"
      redis_master_run: "{{ main_vars_container_vars_default | combine(main_vars_container_vars_default_run) | combine(main_vars_container_vars_redis_master_run) }}"
      db_master_run: "{{ main_vars_container_vars_default | combine(main_vars_container_vars_default_run) | combine(main_vars_container_vars_db_master_run) }}"

- set_fact:
    main_vars_cloud_aux:
      digital_ocean:
        tags:
        - "main"
        - "auto"
        - "dmz"
        - "web"
        - "redis"
        - "postgres"
        - "tmp"
        firewalls:
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
          - ports: "22"
            sources:
              tags: ["main"]
          outbound_rules:
          - protocol: "tcp"
            ports: "1-65535"
            destinations:
              addresses: ["0.0.0.0/0", "::/0"]
          - protocol: "udp"
            ports: "1-65535"
            destinations:
              addresses: ["0.0.0.0/0", "::/0"]
          - protocol: "icmp"
            ports: "1-65535"
            destinations:
              addresses: ["0.0.0.0/0", "::/0"]
        - name: "dmz"
          tags: ["dmz"]
          inbound_rules:
          - ports: "80"
            sources:
              addresses: ["0.0.0.0/0", "::/0"]
          - ports: "443"
            sources:
              addresses: ["0.0.0.0/0", "::/0"]
        - name: "web"
          tags: ["web"]
          inbound_rules:
          - ports: "80"
            sources:
              tags: ["dmz"]
          - ports: "443"
            sources:
              tags: ["dmz"]
        - name: "redis"
          tags: ["redis"]
          inbound_rules:
          - ports: "6379"
            sources:
              tags: ["web"]
        - name: "postgres"
          tags: ["postgres"]
          inbound_rules:
          - ports: "5432"
            sources:
              tags: ["web"]
      
      docker:
        image_owner: "{{ env.cloud_docker_image_owner | default('') }}"
        image_name: "{{ env.cloud_docker_image_name | default('') }}"
        credentials: 
          registry: "{{ env.cloud_docker_registry | default(None) }}"
          username: "{{ env.cloud_docker_username | default('') }}"
          password: "{{ env.cloud_docker_password | default('') }}"
          reauthorize: "{{ env.cloud_docker_reauthorize | default(false) | bool }}"

- set_fact:
    main_vars_cloud:
      digital_ocean:
        bootstrap:
          tmp:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "tmp"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "Discourse Bootstrap Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "tmp"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "discourse_bootstrap"
                instance_name: "{{ main_vars_env_name }}discourse-bootstrap"
                instance_tmp: "{{ true | bool }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
              discourse:
                containers:
                - name: "app-build"
                  action: "bootstrap"
                  vars: "{{ main_vars_containers.app_build }}"
                  push: "{{ true | bool }}"
                  push_credentials: "{{ main_vars_cloud_aux.docker.credentials }}"
                  push_owner: "{{ main_vars_cloud_aux.docker.image_owner }}"
                  push_name: "{{ main_vars_cloud_aux.docker.image_name }}"
                  push_tag: "app-{{ (env.cloud_docker_image_version | default({})).app | default('') }}"
            extra:
              dmz: "{{ false | bool }}"
              load_balance: "{{ false | bool }}"

        layer1:
          app:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "app"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "App Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "dmz"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "discourse_app"
                instance_name: "{{ main_vars_env_name }}discourse-app"
                instance_tmp: "{{ false | bool }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
              discourse:
                containers:
                - name: "app-build"
                  skip: "{{ (main_vars_containers.app_run.base_image | default('')) != '' }}"
                  action: "bootstrap"
                  vars: "{{ main_vars_containers.app_build }}"
                - name: "app-run"
                  vars: "{{ main_vars_containers.app_run }}"
            extra:
              dmz: "{{ true | bool }}"
              load_balance: "{{ false | bool }}"

        layer2:
          db_master:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "db_master"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "DB Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "postgres"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "discourse_db_master"
                instance_name: "{{ main_vars_env_name }}discourse-db-master"
                instance_tmp: "{{ false | bool }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
              discourse:
                containers:
                - name: "db"
                  vars: "{{ main_vars_containers.db_master_run }}"
            extra:
              dmz: "{{ false | bool }}"
              load_balance: "{{ false | bool }}"

          redis_master:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "redis_master"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "Redis Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "redis"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "discourse_redis_master"
                instance_name: "{{ main_vars_env_name }}discourse-redis-master"
                instance_tmp: "{{ false | bool }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
              discourse:
                containers:
                - name: "redis"
                  vars: "{{ main_vars_containers.redis_master_run }}"
            extra:
              dmz: "{{ false | bool }}"
              load_balance: "{{ false | bool }}"

          web:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "web"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "Web Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "web"
                - "dmz"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "discourse_web"
                instance_name: "{{ main_vars_env_name }}discourse-web"
                instance_tmp: "{{ false | bool }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
              discourse:
                containers:
                - name: "web_only"
                  dynamic_host_vars:
                  - name: "db_host"
                    group: "discourse_db_master"
                    count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                  - name: "redis_host"
                    group: "discourse_redis_master"
                    count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                  vars: "{{ main_vars_containers.web_run }}"
            extra:
              dmz: "{{ true | bool }}"
              load_balance: "{{ false | bool }}"

- set_fact:
    main_vars_prepare:
      discourse_docker_repo: "{{ env.discourse_docker_repo }}"
      discourse_docker_version: "{{ env.discourse_docker_version }}"

- name: main discourse vars
  set_fact:
    main_vars:
      cloud: "{{ main_vars_cloud[env.cloud_type][env.cloud_layer] }}"
      dns: "{{ main_vars_dns[env.dns_type | default('')] | default({}) }}"
      prepare: "{{ main_vars_prepare }}"
      destroy: 
        buckets: "{{ main_vars_buckets_to_destroy | list }}"
