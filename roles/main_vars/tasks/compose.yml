- set_fact:
    main_vars_cloud_shutdown: "{{ env.cloud_shutdown | default(0) }}"
    main_vars_cloud_user_data_file: "roles/main_cloud/templates/ubuntu-18.04.j2.sh"
    main_vars_cron_dest_dir: "/var/spool/cron/crontabs"
    main_vars_env_name: "{{ env.name | default('') | ternary((env.name | default('')) + '-', '') }}"
    main_vars_instance_groups_to_destroy: >-
      {{ env.cloud_instance_groups_to_destroy | default([]) }}
    main_vars_buckets_to_destroy: "{{ env.cloud_buckets_to_destroy | default([]) }}"
    main_vars_ipv6: "{{ env.cloud_ipv6 | default('no') }}"
  tags: ["no_print"]

- set_fact:
    main_vars_dns:
      cloudflare:
        task: "cloudflare_dns"
        zone: "{{ env.dns_zone | default('') }}"
        credentials:
          account_email: "{{ env.dns_cloudflare_email | default('') }}"
          account_api_token: "{{ env.dns_cloudflare_token | default('') }}"
        main_record: "{{ env.dns_record | default('') }}"
        static:
        - title: "DNS A records"
          type: "A"
          list: "{{ env.dns_a_list | default([]) }}"
        - title: "DNS CNAME records"
          type: "CNAME"
          list: "{{ env.dns_cname_list | default([]) }}"
  when: (env.dns_type | default('')) == 'cloudflare'
  tags: ["no_print"]
     
- set_fact:
    main_vars_cloud_list: []
  tags: ["no_print"]

- set_fact:
    main_vars_cloud_list: >-
      {{ 
      main_vars_cloud_list
      + [{ 
      'role': main_vars_cloud.type,
      'vars': {
        'cloud': {
          'instance_type': main_vars_item,
          'region': main_vars_cloud.region,
          'title': main_vars_item,
          'hosts_file': inventory_file,
          'ssh_encrypted_key_path': main_vars_ssh_encrypted_key_path,
          'ssh_key_path': main_vars_ssh_encrypted_key_path | ternary(env_tmp_dir + '/cloud.' + main_vars_item + '.key', ''),
          'api_token': main_vars_cloud.api_token,
          'host_user': main_vars_cloud.host_user,
          'host_pass': main_vars_cloud.host_pass,
          'ssh_public_keys': main_vars_cloud.host_ssh_public_keys,
          'all_tags': main_vars_cloud.tags,
          'all_firewalls': main_vars_cloud.firewalls,
          'tags': main_vars_node.tags,
          'instance_count': main_vars_node.amount,
          'instance_max': main_vars_node.amount_to_check,
          'instance_group': main_vars_item,
          'instance_name': main_vars_env_name + 'main-compose-' + main_vars_item,
          'instance_tmp': main_vars_node.instance_tmp | default(false, true),
          'ipv6': main_vars_cloud.ipv6,
          'user_data_file': main_vars_cloud_user_data_file
        }
      },
      'extra':
        'dmz': main_vars_node.dmz | default(false, true),
        'load_balance': main_vars_node.load_balance | default(false, true),
      }] 
      }}
  vars: 
    main_vars_node: "{{ env.nodes[main_vars_item] }}"
    main_vars_cloud: "{{ env.clouds[env.nodes[main_vars_item].cloud] }}"
    main_vars_ssh_encrypted_key_path: >-
      {{ env.clouds[env.nodes[main_vars_item].cloud].ssh_encrypted_key_path_rel  | default('')
      | ternary(env_dir + '/' + 
      (env.clouds[env.nodes[main_vars_item].cloud].ssh_encrypted_key_path_rel | default('')), '') 
      }}
  loop: "{{ env.orchestration.nodes | default([]) }}"
  loop_control:
    loop_var: "main_vars_item"
  tags: ["no_print"]

- set_fact:
    main_vars_prepare:
      pod: "{{ env.pod }}"
      contexts: "{{ env.contexts }}"
      params: "{{ env.params }}"
      docker_become: "{{ env.docker_become }}"
      file_env_vars_relative: "tmp/env/compose_prepare_vars_full.yml"
    main_vars_run:
      docker_become: "{{ env.docker_become }}"
      file_env_vars_relative: "tmp/env/compose_run_vars_full.yml"
    main_vars_cron: 
      src_base_dir: "{{ env_dir }}"
      main: "{{ env.cron | default({}) }}"
      become: "{{ env.docker_become }}"
      dest_dir: "{{ main_vars_cron_dest_dir }}"
      dest_file: >-
        {{ ((env.docker_become | default('')) in ['yes', 'true']) 
        | ternary('root', env.cloud_host_user) 
        }}
  tags: ["no_print"]

- name: main compose vars
  set_fact:
    main_vars:
      base_dir: "/var/cloud"
      cloud: "{{ main_vars_cloud[env.cloud_type][env.cloud_layer] }}"
      dns: "{{ main_vars_dns | default({}) }}"
      prepare: "{{ main_vars_prepare }}"
      run: "{{ main_vars_run }}"
      cron:  "{{ main_vars_cron }}"
      destroy: 
        instance_groups: "{{ main_vars_instance_groups_to_destroy | list }}"
        buckets: "{{ main_vars_buckets_to_destroy | list }}"
  tags: ["no_print"]
