- set_fact:
    main_vars_cloud_shutdown: "{{ env.cloud_shutdown | default(0) }}"
    main_vars_cloud_user_data_file: "roles/main_cloud/templates/ubuntu-18.04.j2.sh"
    main_vars_env_name: "{{ env.name | ternary(env.name + '-', '') }}"
    main_vars_instance_groups_to_destroy: >-
      {{ env.cloud_instance_groups_to_destroy | default([]) }}
    main_vars_buckets_to_destroy: "{{ env.cloud_buckets_to_destroy | default([]) }}"
    main_vars_ipv6: "{{ env.cloud_ipv6 | default('no') }}"
    main_vars_ssh_encrypted_key_path: >-
      {{ env.cloud_ssh_encrypted_key_path_rel 
      | ternary(env_dir + '/' + env.cloud_ssh_encrypted_key_path_rel, '') 
      }}
    main_vars_ssh_key_path: "{{ env_tmp }}/cloud.key"
  tags: ["no_print"]

- set_fact:
    main_vars_dns:
      cloudflare:
        task: "cloudflare_dns"
        zone: "{{ env.dns_zone | default('') }}"
        credentials:
          account_email: "{{ env.dns_cloudflare_email | default('') }}"
          account_api_token: "{{ env.dns_cloudflare_token | default('') }}"
        main_record: "{{ env.dns_record | default('') }}"
        static:
        - title: "DNS A records"
          type: "A"
          list: "{{ env.dns_a_list | default([]) }}"
        - title: "DNS CNAME records"
          type: "CNAME"
          list: "{{ env.dns_cname_list | default([]) }}"
  tags: ["no_print"]

- set_fact:
    main_vars_cloud_aux:
      digital_ocean:
        tags:
        - "main"
        - "auto"
        - "dmz"
        - "web"
        - "redis"
        - "mysql"
        firewalls:
        - name: "auto"
          tags: ["auto"]
          inbound_rules:
          - ports: "22"
            sources:
              tags: ["main"]
          outbound_rules:
          - protocol: "tcp"
            ports: "1-65535"
            destinations:
              addresses: ["0.0.0.0/0", "::/0"]
          - protocol: "udp"
            ports: "1-65535"
            destinations:
              addresses: ["0.0.0.0/0", "::/0"]
          - protocol: "icmp"
            ports: "1-65535"
            destinations:
              addresses: ["0.0.0.0/0", "::/0"]
        - name: "dmz"
          tags: ["dmz"]
          inbound_rules:
          - ports: "80"
            sources:
              addresses: ["0.0.0.0/0", "::/0"]
          - ports: "443"
            sources:
              addresses: ["0.0.0.0/0", "::/0"]
        - name: "web"
          tags: ["web"]
          inbound_rules:
          - ports: "80"
            sources:
              tags: ["dmz"]
          - ports: "443"
            sources:
              tags: ["dmz"]
        - name: "redis"
          tags: ["redis"]
          inbound_rules:
          - ports: "6379"
            sources:
              tags: ["web"]
        - name: "mysql"
          tags: ["mysql"]
          inbound_rules:
          - ports: "3306"
            sources:
              tags: ["web"]
  tags: ["no_print"]

- set_fact:
    main_vars_cloud:
      digital_ocean:    
        main:
          app:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "app"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "Main Instance"
                hosts_file: "{{ inventory_file }}"
                ssh_encrypted_key_path: "{{ main_vars_ssh_encrypted_key_path }}"
                ssh_key_path: "{{ main_vars_ssh_key_path }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "main"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "app"
                instance_name: "{{ main_vars_env_name }}main-compose-app"
                instance_tmp: false
                ipv6: "{{ main_vars_ipv6 }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
            extra:
              dmz: true
              load_balance: false

        layer1:
          app:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "app"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "App Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_encrypted_key_path: "{{ main_vars_ssh_encrypted_key_path }}"
                ssh_key_path: "{{ main_vars_ssh_key_path }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "dmz"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "app"
                instance_name: "{{ main_vars_env_name }}compose-app"
                instance_tmp: false
                ipv6: "{{ main_vars_ipv6 }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
            extra:
              dmz: true
              load_balance: false

        layer2:
          db_master:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "db_master"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "DB Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_encrypted_key_path: "{{ main_vars_ssh_encrypted_key_path }}"
                ssh_key_path: "{{ main_vars_ssh_key_path }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "mysql"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "db_master"
                instance_name: "{{ main_vars_env_name }}compose-db-master"
                instance_tmp: false
                ipv6: "{{ main_vars_ipv6 }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
            extra:
              dmz: false
              load_balance: false

          redis_master:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "redis_master"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "Redis Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_encrypted_key_path: "{{ main_vars_ssh_encrypted_key_path }}"
                ssh_key_path: "{{ main_vars_ssh_key_path }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "redis"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "redis_master"
                instance_name: "{{ main_vars_env_name }}compose-redis-master"
                instance_tmp: false
                ipv6: "{{ main_vars_ipv6 }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
            extra:
              dmz: false
              load_balance: false

          web:
            role: "digital_ocean"
            vars:
              cloud:
                instance_type: "web"
                region: "{{ env.cloud_region | default('nyc1') }}"
                title: "Web Instance"
                hosts_file: "{{ inventory_file }}"
                api_token: "{{ env.cloud_api_token }}"
                host_user: "{{ env.cloud_host_user }}"
                host_pass: "{{ env.cloud_host_pass }}"
                ssh_encrypted_key_path: "{{ main_vars_ssh_encrypted_key_path }}"
                ssh_key_path: "{{ main_vars_ssh_key_path }}"
                ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
                all_tags: "{{ main_vars_cloud_aux.digital_ocean.tags }}"
                all_firewalls: "{{ main_vars_cloud_aux.digital_ocean.firewalls }}"
                tags: 
                - "auto"
                - "web"
                - "dmz"
                instance_count: "{{ (main_vars_cloud_shutdown == 1) | ternary(0, 1) }}"
                instance_max: 1
                instance_group: "web"
                instance_name: "{{ main_vars_env_name }}compose-web"
                instance_tmp: false
                ipv6: "{{ main_vars_ipv6 }}"
                user_data_file: "{{ main_vars_cloud_user_data_file }}"
            extra:
              dmz: true
              load_balance: false
  tags: ["no_print"]

- set_fact:
    main_vars_prepare:
      pod: "{{ env.pod }}"
      contexts: "{{ env.contexts }}"
      params: "{{ env.params }}"
      docker_become: "{{ env.docker_become }}"
      file_env_vars_relative: "tmp/env/compose_prepare_vars_full.yml"
    main_vars_run:
      docker_become: "{{ env.docker_become }}"
      file_env_vars_relative: "tmp/env/compose_run_vars_full.yml"
  tags: ["no_print"]

- name: main compose vars
  set_fact:
    main_vars:
      cloud: "{{ main_vars_cloud[env.cloud_type][env.cloud_layer] }}"
      dns: "{{ main_vars_dns[env.dns_type | default('')] | default({}) }}"
      prepare: "{{ main_vars_prepare }}"
      run: "{{ main_vars_run }}"
      destroy: 
        instance_groups: "{{ main_vars_instance_groups_to_destroy | list }}"
        buckets: "{{ main_vars_buckets_to_destroy | list }}"
  tags: ["no_print"]
