- name: "{{ main_cloud_title }} - set_fact - args"
  set_fact: { "{{ main_cloud_item_key }}": "{{ main_cloud_item_value }}" }
  vars:
    main_cloud_item_key: "main_cloud_var_{{ main_cloud_item }}"
    main_cloud_item_value: "{{ main_cloud_vars[main_cloud_item] }}"
  loop: 
  - "instance_type"
  - "title"
  - "host_user"
  - "host_pass"
  - "instance_group"
  - "ssh_encrypted_key_path"
  - "ssh_key_path"
  loop_control:
    loop_var: main_cloud_item
  tags: ["no_print"]

- name: "{{ main_cloud_title }} - full title"
  set_fact: 
    main_cloud_full_title: "{{ main_cloud_title }} - {{ main_cloud_var_title }}"
  tags: ["no_print"]

- name: "{{ main_cloud_full_title }} - set_fact"
  set_fact: { "{{ main_cloud_item_key }}": "{{ main_cloud_item_value }}" }
  vars:
    main_cloud_item_key: "{{ main_cloud_role + '_' + main_cloud_item.key }}"
    main_cloud_item_value: "{{ main_cloud_item.value }}"
  loop: "{{ main_cloud_vars | dict2items }}"
  loop_control:
    loop_var: main_cloud_item
    label: "{{ main_cloud_item.key }}"
  tags: ["no_print"]

- name: "{{ main_cloud_full_title }} - set_fact"
  set_fact: { "{{ main_cloud_item_key }}": "{{ main_cloud_item_value }}" }
  vars:
    main_cloud_item_key: "{{ main_cloud_role }}_shutdown"
    main_cloud_item_value: "{{ main_cloud_shutdown | default(false) }}"
  tags: ["no_print"]

- name: "{{ main_cloud_full_title }} - execute role {{ main_cloud_role }}"
  include_role: 
    name: '{{ main_cloud_role }}'

- set_fact: 
    main_cloud_active_hosts: "{{ lookup('vars', main_cloud_role + '_active_hosts') }}"
    main_cloud_hosts_info: ""
    main_cloud_ssh_key_file: ""

- name: "{{ main_cloud_full_title }} - generate unencrypted key file"
  copy:
    src: "{{ main_cloud_var_ssh_encrypted_key_path }}"
    dest: "{{ main_cloud_var_ssh_key_path }}"
    decrypt: yes
    mode: 0600
  when: >-
    ((main_cloud_var_ssh_encrypted_key_path | default('', true)) != '') 
    and 
    ((main_cloud_var_ssh_key_path | default('', true)) != '')

- name: "{{ main_cloud_full_title }} - generate the hosts information with the instances ips"
  set_fact: 
    main_cloud_hosts_info: >-
      {{ main_cloud_hosts_info | default('') }}

      {{ main_cloud_item.name }}
      ansible_host={{ main_cloud_item.public_ipv4 }}
      ansible_user={{ main_cloud_var_host_user }}
      {{ main_cloud_var_host_pass | ternary('ansible_become_pass=' + main_cloud_var_host_pass, '') }}
      {{ main_cloud_var_ssh_key_path 
      | ternary('ansible_ssh_private_key_file=' + main_cloud_var_ssh_key_path, '') 
      }}
      instance_type={{ main_cloud_var_instance_type }}
      instance_index={{ main_cloud_index }}
      ansible_host_service={{ 
      main_cloud_extra.dmz | 
      ternary(main_cloud_item.public_ipv4, main_cloud_item.private_ip) 
      }}
  loop: "{{ main_cloud_active_hosts | list }}"
  loop_control:
    index_var: main_cloud_index
    loop_var: main_cloud_item
    label: "{{ main_cloud_item.name }}"

- name: '{{ main_cloud_full_title }} - Update the hosts file with the generated hosts'
  blockinfile:
    path: "{{ main_cloud_vars.hosts_file }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ main_cloud_var_instance_group }}"
    insertafter: "\\[{{ main_cloud_var_instance_group }}\\]"
    block: "{{ main_cloud_hosts_info }}"
  tags: ["print_action"]

- name: '{{ main_cloud_full_title }} - refresh inventory'
  meta: refresh_inventory
  tags: ["print_action"]

- name: "create the main dns record (IPv6) point to the instance when in the dmz layer"
  include_role: 
    name: "main_dns"
  vars: 
    main_dns_title: "{{ main_cloud_full_title }} - main dns - IPv6"
    main_dns_task: "{{ main_cloud_dns.task }}"
    main_dns_credentials: "{{ main_cloud_dns.credentials }}"
    main_dns_zone: "{{ main_cloud_dns.zone }}"
    main_dns_type: "AAAA"
    main_dns_record: "{{ main_cloud_dns.main_record }}"
    main_dns_value: "{{ main_cloud_active_hosts[0].public_ipv6 }}"
  when: >-
    (main_cloud_dns is defined) and
    (main_cloud_dns.task is defined) and
    (main_cloud_active_hosts | length == 1) and 
    (main_cloud_extra.dmz | bool) and 
    (main_cloud_active_hosts[0].public_ipv6 is defined)
  tags: ["print_action"]

- name: "create the main dns record (IPv4) point to the instance when in the dmz layer"
  include_role: 
    name: "main_dns"
  vars: 
    main_dns_title: "{{ main_cloud_full_title }} - main dns - IPv4"
    main_dns_task: "{{ main_cloud_dns.task }}"
    main_dns_credentials: "{{ main_cloud_dns.credentials }}"
    main_dns_zone: "{{ main_cloud_dns.zone }}"
    main_dns_type: "A"
    main_dns_record: "{{ main_cloud_dns.main_record }}"
    main_dns_value: "{{ main_cloud_active_hosts[0].public_ipv4 }}"
  when: >-
    (main_cloud_dns is defined) and
    (main_cloud_dns.task is defined) and
    (main_cloud_active_hosts | length == 1) and 
    (main_cloud_extra.dmz | bool) and 
    (main_cloud_active_hosts[0].public_ipv4 is defined)
  tags: ["print_action"]
