cloud_vars:
  app: "{{ (env.containers.default | default({})) | combine(env.containers.app | default({})) }}"
  db_master: "{{ (env.containers.default | default({})) | combine(env.containers.db_master | default({})) }}"
  redis_master: "{{ (env.containers.default | default({})) | combine(env.containers.redis_master | default({})) }}"
  web: "{{ (env.containers.default | default({})) | combine(env.containers.web | default({})) }}"

cloud_aux:
  digital_ocean:
    tags:
    - "main"
    - "auto"
    - "dmz"
    - "web"
    - "redis"
    - "postgres"
    - "tmp"
    firewalls:
    - name: "auto"
      tags: ["auto"]
      inbound_rules:
      - ports: "22"
        sources:
          tags: ["main"]
      outbound_rules:
      - protocol: "tcp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
      - protocol: "udp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
      - protocol: "icmp"
        ports: "1-65535"
        destinations:
          addresses: ["0.0.0.0/0", "::/0"]
    - name: "dmz"
      tags: ["dmz"]
      inbound_rules:
      - ports: "80"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
      - ports: "443"
        sources:
          addresses: ["0.0.0.0/0", "::/0"]
    - name: "web"
      tags: ["web"]
      inbound_rules:
      - ports: "80"
        sources:
          tags: ["dmz"]
      - ports: "443"
        sources:
          tags: ["dmz"]
    - name: "redis"
      tags: ["redis"]
      inbound_rules:
      - ports: "6379"
        sources:
          tags: ["web"]
    - name: "postgres"
      tags: ["postgres"]
      inbound_rules:
      - ports: "5432"
        sources:
          tags: ["web"]
  
  docker:
    image_owner: "{{ env.cloud_docker_image_owner | default('') }}"
    image_name: "{{ env.cloud_docker_image_name | default('') }}"
    credentials: 
    - registry: "{{ env.cloud_docker_registry | default(None) }}"
      username: "{{ env.cloud_docker_username | default('') }}"
      password: "{{ env.cloud_docker_password | default('') }}"
      reauthorize: "{{ env.cloud_docker_reauthorize | default(false) | bool }}"

cloud_dns:
  cloudflare:
    task: "cloudflare_dns"
    zone: "{{ env.zone }}"
    credentials:
      account_email: "{{ env.cloudflare_email }}"
      account_api_token: "{{ env.cloudflare_token }}"
    main_record: "{{ env.dns_record }}"
    static:
    - title: "DNS A records"
      type: "A"
      list: "{{ env.dns_a_list | default([]) }}"
    - title: "DNS CNAME records"
      type: "CNAME"
      list: "{{ env.dns_cname_list | default([]) }}"

cloud:
  digital_ocean:
    bootstrap:
      tmp:
        role: "main_do"
        vars:
          main_do_instance_type: "tmp"
          main_do_region: "{{ env.cloud_region | default('nyc1') }}"
          main_do_title: "Bootstrap Instance"
          main_do_hosts_file: "{{ inventory_file }}"
          main_do_api_token: "{{ env.cloud_api_token }}"
          main_do_host_user: "{{ env.cloud_host_user }}"
          main_do_host_pass: "{{ env.cloud_host_pass }}"
          main_do_ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
          main_do_all_tags: "{{ cloud_aux.digital_ocean.tags }}"
          main_do_all_firewalls: "{{ cloud_aux.digital_ocean.firewalls }}"
          main_do_tags: 
          - "auto"
          - "tmp"
          main_do_instance_count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
          main_do_instance_max: 1
          main_do_instance_group: "discourse_bootstrap"
          main_do_instance_name: "discourse-bootstrap"
          main_do_instance_tmp: "{{ true | bool }}"
          containers:
          - name: "app-build"
            action: "bootstrap"
            vars: "{{ cloud_vars.app }}"
            push: "{{ true | bool }}"
            push_credentials: "{{ cloud_aux.docker.credentials }}"
            push_owner: "{{ cloud_aux.docker.image_owner }}"
            push_name: "{{ cloud_aux.docker.image_name }}"
            push_tag: "app-{{ env.cloud_docker_image_version.app }}"
        extra:
          dmz: "{{ false | bool }}"
          load_balance: "{{ false | bool }}"

    layer1:
      app:
        role: "main_do"
        vars:
          main_do_instance_type: "app"
          main_do_region: "{{ env.cloud_region | default('nyc1') }}"
          main_do_title: "App Instance"
          main_do_hosts_file: "{{ inventory_file }}"
          main_do_api_token: "{{ env.cloud_api_token }}"
          main_do_host_user: "{{ env.cloud_host_user }}"
          main_do_host_pass: "{{ env.cloud_host_pass }}"
          main_do_ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
          main_do_all_tags: "{{ cloud_aux.digital_ocean.tags }}"
          main_do_all_firewalls: "{{ cloud_aux.digital_ocean.firewalls }}"
          main_do_tags: 
          - "auto"
          - "dmz"
          main_do_instance_count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
          main_do_instance_max: 1
          main_do_instance_group: "discourse_app"
          main_do_instance_name: "discourse-app"
          main_do_instance_tmp: "{{ false | bool }}"
          containers:
          - name: "app-build"
            action: "bootstrap"
            vars: "{{ cloud_vars.app }}"
          - name: "app-run"
            vars: "{{ cloud_vars.app }}"
        extra:
          dmz: "{{ true | bool }}"
          load_balance: "{{ false | bool }}"

    layer2:
      db_master:
        role: "main_do"
        vars:
          main_do_instance_type: "db_master"
          main_do_region: "{{ env.cloud_region | default('nyc1') }}"
          main_do_title: "DB Instance"
          main_do_hosts_file: "{{ inventory_file }}"
          main_do_api_token: "{{ env.cloud_api_token }}"
          main_do_host_user: "{{ env.cloud_host_user }}"
          main_do_host_pass: "{{ env.cloud_host_pass }}"
          main_do_ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
          main_do_all_tags: "{{ cloud_aux.digital_ocean.tags }}"
          main_do_all_firewalls: "{{ cloud_aux.digital_ocean.firewalls }}"
          main_do_tags: 
          - "auto"
          - "postgres"
          main_do_instance_count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
          main_do_instance_max: 1
          main_do_instance_group: "discourse_db_master"
          main_do_instance_name: "discourse-db-master"
          main_do_instance_tmp: "{{ false | bool }}"
          containers:
          - name: "db"
            vars: "{{ cloud_vars.db_master }}"
        extra:
          dmz: "{{ false | bool }}"
          load_balance: "{{ false | bool }}"

      redis_master:
        role: "main_do"
        vars:
          main_do_instance_type: "redis_master"
          main_do_region: "{{ env.cloud_region | default('nyc1') }}"
          main_do_title: "Redis Instance"
          main_do_hosts_file: "{{ inventory_file }}"
          main_do_api_token: "{{ env.cloud_api_token }}"
          main_do_host_user: "{{ env.cloud_host_user }}"
          main_do_host_pass: "{{ env.cloud_host_pass }}"
          main_do_ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
          main_do_all_tags: "{{ cloud_aux.digital_ocean.tags }}"
          main_do_all_firewalls: "{{ cloud_aux.digital_ocean.firewalls }}"
          main_do_tags: 
          - "auto"
          - "redis"
          main_do_instance_count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
          main_do_instance_max: 1
          main_do_instance_group: "discourse_redis_master"
          main_do_instance_name: "discourse-redis-master"
          main_do_instance_tmp: "{{ false | bool }}"
          containers:
          - name: "redis"
            vars: "{{ cloud_vars.redis_master }}"
        extra:
          dmz: "{{ false | bool }}"
          load_balance: "{{ false | bool }}"

      web:
        role: "main_do"
        vars:
          main_do_instance_type: "web"
          main_do_region: "{{ env.cloud_region | default('nyc1') }}"
          main_do_title: "Web Instance"
          main_do_hosts_file: "{{ inventory_file }}"
          main_do_api_token: "{{ env.cloud_api_token }}"
          main_do_host_user: "{{ env.cloud_host_user }}"
          main_do_host_pass: "{{ env.cloud_host_pass }}"
          main_do_ssh_public_keys: "{{ env.cloud_host_ssh_public_keys }}"
          main_do_all_tags: "{{ cloud_aux.digital_ocean.tags }}"
          main_do_all_firewalls: "{{ cloud_aux.digital_ocean.firewalls }}"
          main_do_tags: 
          - "auto"
          - "web"
          - "dmz"
          main_do_instance_count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
          main_do_instance_max: 1
          main_do_instance_group: "discourse_web"
          main_do_instance_name: "discourse-web"
          main_do_instance_tmp: "{{ false | bool }}"
          containers:
          - name: "web_only"
            dynamic_host_vars:
            - name: "db_host"
              group: "discourse_db_master"
              count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
            - name: "redis_host"
              group: "discourse_redis_master"
              count: "{{ (env.shutdown == 1) | ternary(0, 1) }}"
            vars: "{{ cloud_vars.web }}"
        extra:
          dmz: "{{ true | bool }}"
          load_balance: "{{ false | bool }}"
