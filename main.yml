###############################################################################
##################            PREPARE THE CLOUD            ####################
###############################################################################

- name: Play 01.01 - Cloud - Main
  hosts: main
  tags:
  - init
  - cloud
  - cloud_main
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_main"
    vars: 
      cloud_main_title: "cloud - prepare"
      cloud_main_cloud: "{{ env.clouds[main_item] }}"
      cloud_main_credentials: >-
        {{ env.credentials[cloud_main_cloud.credentials] }}
      cloud_main_cloud_params: >-
        {{ env.cloud_params[cloud_main_cloud.params] }}
      cloud_main_tmp_dir: "{{ env_tmp_dir }}/cloud/main/{{ main_item }}"
    loop: "{{ env.main.clouds | default([]) | list }}"
    loop_control:
      loop_var: main_item

###############################################################################

- name: Play 01.01 - Cloud - DNS
  hosts: main
  tags:
  - init
  - cloud
  - dns
  gather_facts: no  
  tasks:  
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - name: "create the static dns records"
    include_role: 
      name: "cloud_dns"
    vars: 
      cloud_dns_title: >-
        create the static dns records - 
        {{ main_item.type }} - {{ main_item.record }}
      cloud_dns_type: "{{ main_item.type }}"
      cloud_dns_credentials: >-
        {{ env.credentials[env.dns[main_item].credentials] }}
      cloud_dns_zone: "{{ env.dns[main_item].zone }}"
      cloud_dns_record_type: "{{ main_item.dns_type }}"
      cloud_dns_record: "{{ main_item.record }}"
      cloud_dns_value: "{{ main_item.value }}"
    loop: "{{ env.main.dns | default([]) | list }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item.type }}"
    when: (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################

- name: Play 01.02 - Cloud - Buckets
  hosts: main
  tags:
  - init
  - cloud
  - buckets
  gather_facts: no  
  tasks:  
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - name: "create the buckets"
    aws_s3:
      s3_url: "{{ main_bucket.endpoint }}"
      access_key: "{{ main_credentials.access_key }}"
      secret_key: "{{ main_credentials.secret_key }}"
      bucket: "{{ main_bucket.name }}"
      mode: create
    vars:
      main_bucket: "{{ env.buckets[main_item] }}"
      main_credentials: "{{ env.credentials[main_bucket.credentials] }}"
    loop: "{{ (env.main.buckets | default([])) }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item }}"

###############################################################################

- name: Play 01.04 - Cloud - Nodes
  hosts: main
  tags:
  - init
  - cloud
  - nodes
  - create
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_node"
    vars: 
      cloud_node_title: "cloud - instances - {{ main_item }}"
      cloud_node_env_name: "{{ env.name }}"
      cloud_node_node_id: "{{ main_item }}"
      cloud_node_node: "{{ env.nodes[main_item] }}"
      cloud_node_node_credentials: >-
        {{ env.credentials[cloud_node_node.credentials] }}
      cloud_node_node_params: >-
        {{ env.node_params[cloud_node_node.params] }}
      cloud_node_instance_params: >-
        {{ env.instance_params[cloud_node_node_params.params] }}
      cloud_node_cloud: "{{ env.clouds[cloud_node_node.cloud] }}"
      cloud_node_cloud_credentials: >-
        {{ env.credentials[cloud_node_cloud.credentials] }}
      cloud_node_dns_dict: "{{ env.dns }}"
      cloud_node_env_dir: "{{ env_dir }}"
      cloud_node_tmp_dir: >-
        {{ env_tmp_dir }}/cloud/node/{{ cloud_node_node.cloud }}
      cloud_node_hosts_file: "{{ inventory_file }}"
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: ((env_node | default('')) == '') or (env_node == main_item)

###############################################################################

- name: Play 01.05 - Wait for the hosts to be ready
  hosts: host
  tags:
  - init
  - cloud
  - nodes
  - wait
  gather_facts: no
  tasks:
  - include_tasks: "tasks/env.yml"
    tags: ["no_print"]
    
  - include_role: 
      name: "host_test"
    vars: 
      host_test_title: "{{ inventory_hostname }}"
      host_test_node: "{{ env.nodes[instance_type] }}"
      host_test_node_params: "{{ env.node_params[host_test_node.params] }}"
      host_test_instance_params: >-
        {{ env.instance_params[host_test_node_params.params] }}
      host_test_vars: "{{ host_test_instance_params.host_test }}"
      host_test_log_file: "{{ host_test_vars.log_file }}"
      host_test_setup_last_line: "{{ host_test_vars.setup_last_line }}"
      host_test_initial_connection_timeout: >-
        {{ host_test_vars.initial_connection_timeout }}
      host_test_setup_finished_timeout: >-
        {{ host_test_vars.setup_finished_timeout }}
    when: (((env_node | default('')) == '') or (env_node == instance_type))

###############################################################################
##################        PREPARE & START THE PODS         ####################
###############################################################################

- name: Play 02.01 - Prepare the Pods Repositories (Local)
  hosts: main
  tags:
  - init
  - pod
  - prepare
  - prepare-local
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - name: "pods - repositories - local"
    git:
      repo: "{{ main_item.value.repo }}"
      version: "{{ main_item.value.repo_version }}"
      dest: "{{ env_tmp_dir }}/repo/pod/{{ main_item.key }}"
      update: yes
      force: yes
    loop: "{{ lookup('dict', (env.pods | default({})), wantlist=True) }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item.key }}"

###############################################################################

- name: Play 02.02 - Prepare the Pods - Remote
  hosts: host
  tags:
  - init
  - pod
  - prepare
  - prepare-remote
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_prepare"
    vars:
      cloud_prepare_title: "cloud prepare - {{ main_item }}"
      cloud_prepare_env_name: "{{ env.name }}"
      cloud_prepare_node_id: "{{ main_item }}"
      cloud_prepare_node: "{{ env.nodes[main_item] }}"
      cloud_prepare_base_dir: "{{ cloud_prepare_node.base_dir }}"
      cloud_prepare_node_credentials: >-
        {{ env.credentials[cloud_prepare_node.credentials] }}
      cloud_prepare_cloud: "{{ env.clouds[cloud_prepare_node.cloud] }}"
      cloud_prepare_orchestrations_dict: "{{ env.orchestrations }}"
      cloud_prepare_pods_dict: "{{ env.pods }}"
      cloud_prepare_params_dict: "{{ env.pod_params }}"
      cloud_prepare_env_dir: "{{ env_dir }}"
      cloud_prepare_local_tmp_dir: "{{ env_tmp_dir }}/node/{{ main_item }}"
      cloud_prepare_local_pod_repo_base: "{{ env_tmp_dir }}/repo/pod"
      cloud_prepare_env_cmd: "{{ env_cmd | default('', true) }}"
      cloud_prepare_env_pod: "{{ env_pod | default('', true) }}"
      cloud_prepare_env_vars_relative_file: >-
        tmp/env/cloud.prepare.vars_full.yml
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################

- name: Play 02.03 - Start the Pods
  hosts: host
  tags:
  - init
  - pod
  - run
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_run"
    vars:
      cloud_run_title: "cloud run - {{ main_item }}"
      cloud_run_env_name: "{{ env.name }}"
      cloud_run_node_id: "{{ main_item }}"
      cloud_run_node: "{{ env.nodes[main_item] }}"
      cloud_run_base_dir: "{{ cloud_run_node.base_dir }}"
      cloud_run_node_credentials: >-
        {{ env.credentials[cloud_run_node.credentials] }}
      cloud_run_cloud: "{{ env.clouds[cloud_run_node.cloud] }}"
      cloud_run_orchestrations_dict: "{{ env.orchestrations }}"
      cloud_run_pods_dict: "{{ env.pods }}"
      cloud_run_params_dict: "{{ env.pod_params }}"
      cloud_run_env_pod: "{{ env_pod | default('', true) }}"
      cloud_run_env_cmd: "{{ env_cmd | default('', true) }}"
      cloud_run_env_vars_relative_file_src: >-
        tmp/env/cloud.prepare.vars_full.yml
      cloud_run_env_vars_relative_file_dest: >-
        tmp/env/cloud.run.vars_full.yml
      cloud_run_force: "{{ env_force | default(false, true) }}"
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

- debug:
    var: env_force

###############################################################################
##################          DEFINE THE CRON JOBS           ####################
###############################################################################

- name: Play 03 - Define the cron jobs
  hosts: host
  tags:
  - init
  - cron
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cron"
    vars:
      cron_title: "cron - {{ main_item }}"
      cron_node: "{{ env.nodes[main_item] }}"
      cron_env_dir: "{{ env_dir }}"
      cron_start: "true"
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################
##################       EXECUTE COMMANDS ON-THE-FLY       ####################
###############################################################################

- name: Play 04 - Execute instruction on-the-fly
  hosts: host
  tags:
  - never
  - exec
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/env.yml"
    tags: ["no_print"]

  - include_role: 
      name: "long_run"
    vars:
      long_run_title: >-
        compose exec - 
        {{ env_exec_cmd | b64decode | trim 
        | regex_replace('\n', ' .. ') 
        | truncate(30, False, '...', 10) }}
      long_run_become: "{{ env_exec_become | default(false) }}"
      long_run_output_path: >-
        {{ env.node_params[env.nodes[main_item].params].base_dir 
        }}/{{ env.nodes[main_item].main_pod }}/data/log
      long_run_output_file: "env-exec.log"
      long_run_tmp_path: >-
        {{ env.node_params[env.nodes[main_item].params].base_dir 
        }}/{{ env.nodes[main_item].main_pod }}/data/tmp
      long_run_tmp_file: "env-exec"
      long_run_path: >-
        {{ env.node_params[env.nodes[main_item].params].base_dir 
        }}/{{ env.nodes[main_item].main_pod }}/main
      long_run_cmd: "{{ env_exec_cmd | b64decode | trim }}"
      long_run_poll: 2
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      ((env_exec_cmd | default('')) != '')
      and
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################
##################            DESTROY THE CLOUD            ####################
###############################################################################

- name: Play 05.01 - Delete Temporary Cloud Instances
  hosts: main
  tags:
  - init
  - temp
  - cloud
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_node"
    vars: 
      cloud_node_title: >-
        cloud - destroy temporary instances - {{ main_item }}
      cloud_node_env_name: "{{ env.name }}"
      cloud_node_node_id: "{{ main_item }}"
      cloud_node_node: "{{ env.nodes[main_item] }}"
      cloud_node_node_credentials: >-
        {{ env.credentials[cloud_node_node.credentials] }}
      cloud_node_node_params: >-
        {{ env.node_params[cloud_node_node.params] }}
      cloud_node_instance_params: >-
        {{ env.instance_params[cloud_node_node_params.params] }}
      cloud_node_cloud: "{{ env.clouds[cloud_node_node.cloud] }}"
      cloud_node_cloud_credentials: >-
        {{ env.credentials[cloud_node_cloud.credentials] }}
      cloud_node_dns_dict: "{{ env.dns }}"
      cloud_node_env_dir: "{{ env_dir }}"
      cloud_node_tmp_dir: >-
        {{ env_tmp_dir }}/cloud/node/{{ cloud_node_node.cloud }}
      cloud_node_hosts_file: "{{ inventory_file }}"
      cloud_node_shutdown: true
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (env.nodes[main_item].tmp | default(false) | bool)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################

- name: Play 05.02 - Delete everything that was previously created
  hosts: main
  tags:
  - never
  - destroy
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]
   
  - include_role: 
      name: "cloud_node"
    vars: 
      cloud_node_title: "cloud - destroy instances - {{ main_item }}"
      cloud_node_env_name: "{{ env.name }}"
      cloud_node_node_id: "{{ main_item }}"
      cloud_node_node: "{{ env.nodes[main_item] }}"
      cloud_node_node_credentials: >-
        {{ env.credentials[cloud_node_node.credentials] }}
      cloud_node_node_params: >-
        {{ env.node_params[cloud_node_node.params] }}
      cloud_node_instance_params: >-
        {{ env.instance_params[cloud_node_node_params.params] }}
      cloud_node_cloud: "{{ env.clouds[cloud_node_node.cloud] }}"
      cloud_node_cloud_credentials: >-
        {{ env.credentials[cloud_node_cloud.credentials] }}
      cloud_node_dns_dict: "{{ env.dns }}"
      cloud_node_env_dir: "{{ env_dir }}"
      cloud_node_tmp_dir: >-
        {{ env_tmp_dir }}/cloud/node/{{ cloud_node_node.cloud }}
      cloud_node_hosts_file: "{{ inventory_file }}"
      cloud_node_shutdown: true
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: (main_item in (env.destroy.nodes | default([])))

  - name: "delete the buckets and all their contents"
    aws_s3:
      s3_url: "{{ main_bucket.endpoint }}"
      access_key: "{{ main_credentials.access_key }}"
      secret_key: "{{ main_credentials.secret_key }}"
      bucket: "{{ main_bucket.name }}"
      mode: delete
    vars:
      main_bucket: "{{ env.buckets[main_item] }}"
      main_credentials: "{{ env.credentials[main_bucket.credentials] }}"
    loop: "{{ (env.destroy.buckets | default([])) }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item }}"

###############################################################################
