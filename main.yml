- name: Play 01 - Create Cloud Instances
  hosts: main
  tags:
  - init
  - setup
  - cloud
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "main_cloud"
    vars: 
      main_cloud_title: "cloud - create instances - {{ main_item }}"
      main_cloud_env_name: "{{ env.name }}"
      main_cloud_node_id: "{{ main_item }}"
      main_cloud_node: "{{ env.nodes[main_item] }}"
      main_cloud_var: "{{ env.clouds[env.nodes[main_item].cloud] }}"
      main_cloud_params: "{{ env.cloud_params[main_cloud_var.params] }}"
      main_cloud_dns_dict: "{{ env.dns }}"
      main_cloud_env_dir: "{{ env_dir }}"
      main_cloud_tmp_dir: "{{ env_tmp_dir }}/cloud"
      main_cloud_hosts_file: "{{ inventory_file }}"
      main_cloud_user_data_file: "roles/main_cloud/templates/ubuntu-18.04.j2.sh"
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: ((env_node | default('')) == '') or (env_node == main_item)

###############################################################################

- name: Play 02 - Wait for hosts to be ready
  hosts: host
  tags:
  - init
  - setup
  - test
  gather_facts: no
  tasks:
  - include_role: 
      name: "host_test"
    when: (((env_node | default('')) == '') or (env_node == instance_type))

###############################################################################

- name: Play 03 - Update the DNS records
  hosts: main
  tags:
  - init
  - setup
  - dns
  gather_facts: no  
  tasks:  
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - name: "create the static dns records"
    include_role: 
      name: "main_dns"
    vars: 
      main_dns_title: >-
        create the static dns records - 
        {{ main_item.type }} - {{ main_item.record }}
      main_dns_task: "{{ main_item.type + '_dns' }}"
      main_dns_credentials: "{{ env.dns[main_item].credentials }}"
      main_dns_zone: "{{ env.dns[main_item].zone }}"
      main_dns_type: "{{ main_item.dns_type }}"
      main_dns_record: "{{ main_item.record }}"
      main_dns_value: "{{ main_item.value }}"
    loop: "{{ env.main.dns | default([]) | list }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item.type }}"
    when: (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################

- name: Play 04 - Prepare the hosts
  hosts: host
  tags:
  - init
  - prepare
  - prepare-hosts
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_prepare"
    vars:
      cloud_prepare_title: "cloud prepare - {{ main_item }}"
      cloud_prepare_env_name: "{{ env.name }}"
      cloud_prepare_node_id: "{{ main_item }}"
      cloud_prepare_node: "{{ env.nodes[main_item] }}"
      cloud_prepare_cloud: "{{ env.clouds[env.nodes[main_item].cloud] }}"
      cloud_prepare_orchestrations_dict: "{{ env.orchestrations }}"
      cloud_prepare_pods_dict: "{{ env.pods }}"
      cloud_prepare_params_dict: "{{ env.params }}"
      cloud_prepare_base_dir: "{{ env.nodes[main_item].base_dir | default('/var/cloud') }}"
      cloud_prepare_env_dir: "{{ env_dir }}"
      cloud_prepare_local_tmp_dir: "{{ env_tmp_dir }}/{{ main_item }}"
      cloud_prepare_env_cmd: "{{ env_cmd | default('', true) }}"
      cloud_prepare_env_pod: "{{ env_pod | default('', true) }}"
      cloud_prepare_env_vars_relative_file: 'tmp/env/cloud.prepare.vars_full.yml'
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################

- name: Play 05 - Run
  hosts: host
  tags:
  - init
  - run
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cloud_run"
    vars:
      cloud_run_title: "cloud run - {{ main_item }}"
      cloud_run_env_name: "{{ env.name }}"
      cloud_run_node_id: "{{ main_item }}"
      cloud_run_node: "{{ env.nodes[main_item] }}"
      cloud_run_cloud: "{{ env.clouds[env.nodes[main_item].cloud] }}"
      cloud_run_orchestrations_dict: "{{ env.orchestrations }}"
      cloud_run_pods_dict: "{{ env.pods }}"
      cloud_run_params_dict: "{{ env.params }}"
      cloud_run_base_dir: "{{ env.nodes[main_item].base_dir | default('/var/cloud') }}"
      cloud_run_env_pod: "{{ env_pod | default('', true) }}"
      cloud_run_env_cmd: "{{ env_cmd | default('', true) }}"
      cloud_run_env_vars_relative_file_src: 'tmp/env/cloud.prepare.vars_full.yml'
      cloud_run_env_vars_relative_file_dest: 'tmp/env/cloud.run.vars_full.yml'
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

# ###############################################################################

- name: Play 06 - Define the cron jobs
  hosts: host
  tags:
  - init
  - cron
  gather_facts: no
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "cron"
    vars:
      cron_title: "cron - {{ main_item }}"
      cron_node: "{{ env.nodes[main_item] }}"
      cron_env_dir: "{{ env_dir }}"
      cron_start: "true"
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (main_item == instance_type)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

# ###############################################################################

# - name: Play 07.1 - Execute instruction on-the-fly - DB Master
#   hosts: db_master
#   tags:
#   - never
#   - exec
#   - exec_db_master
#   gather_facts: no  
#   tasks:
#   - include_tasks: "tasks/compose_exec.yml"
#     tags: ["no_print"]

# #-----------------------------------------------------------------------------#

# - name: Play 07.2 - Execute instruction on-the-fly - Redis Master
#   hosts: redis_master
#   tags:
#   - never
#   - exec
#   - exec_redis_master
#   gather_facts: no  
#   tasks:
#   - include_tasks: "tasks/compose_exec.yml"
#     tags: ["no_print"]

# #-----------------------------------------------------------------------------#

# - name: Play 07.3 - Execute instruction on-the-fly - Web
#   hosts: 
#   - web
#   - web_replica
#   tags:
#   - never
#   - exec
#   - exec_web
#   gather_facts: no  
#   tasks:
#   - include_tasks: "tasks/compose_exec.yml"
#     tags: ["no_print"]

# #-----------------------------------------------------------------------------#

# - name: Play 07.4 - Execute instruction on-the-fly - App
#   hosts: 
#   - app
#   tags:
#   - never
#   - exec
#   - exec_app
#   gather_facts: no  
#   tasks:
#   - include_tasks: "tasks/compose_exec.yml"
#     tags: ["no_print"]

###############################################################################

- name: Play 08 - Delete Temporary Cloud Instances
  hosts: main
  tags:
  - init
  - temp
  - cloud
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]

  - include_role: 
      name: "main_cloud"
    vars: 
      main_cloud_title: "cloud - destroy temporary instances - {{ main_item }}"
      main_cloud_env_name: "{{ env.name }}"
      main_cloud_node_id: "{{ main_item }}"
      main_cloud_node: "{{ env.nodes[main_item] }}"
      main_cloud_var: "{{ env.clouds[env.nodes[main_item].cloud] }}"
      main_cloud_params: "{{ env.cloud_params[main_cloud_var.params] }}"
      main_cloud_dns_dict: "{{ env.dns }}"
      main_cloud_env_dir: "{{ env_dir }}"
      main_cloud_tmp_dir: "{{ env_tmp_dir }}/cloud"
      main_cloud_hosts_file: "{{ inventory_file }}"
      main_cloud_user_data_file: "roles/main_cloud/templates/ubuntu-18.04.j2.sh"
      main_cloud_shutdown: true
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: >-
      (env.nodes[main_item].tmp | default(false) | bool)
      and
      (((env_node | default('')) == '') or (env_node == main_item))

###############################################################################

- name: Play 09 - Delete everything that was previously created
  hosts: main
  tags:
  - never
  - destroy
  gather_facts: no  
  tasks:
  - include_tasks: "tasks/init.yml"
    tags: ["no_print"]
   
  - include_role: 
      name: "main_cloud"
    vars: 
      main_cloud_title: "cloud - destroy all instances - {{ main_item }}"
      main_cloud_env_name: "{{ env.name }}"
      main_cloud_node_id: "{{ main_item }}"
      main_cloud_node: "{{ env.nodes[main_item] }}"
      main_cloud_var: "{{ env.clouds[env.nodes[main_item].cloud] }}"
      main_cloud_params: "{{ env.cloud_params[main_cloud_var.params] }}"
      main_cloud_dns_dict: "{{ env.dns }}"
      main_cloud_env_dir: "{{ env_dir }}"
      main_cloud_tmp_dir: "{{ env_tmp_dir }}/cloud"
      main_cloud_hosts_file: "{{ inventory_file }}"
      main_cloud_user_data_file: "roles/main_cloud/templates/ubuntu-18.04.j2.sh"
      main_cloud_shutdown: true
    loop: "{{ env.main.nodes | default([]) | list }}"
    loop_control:
      loop_var: main_item
    when: (main_item in (env.destroy.nodes | default([])))

  - name: "delete the bucket and all contents"
    aws_s3:
      s3_url: "{{ main_item.0.endpoint }}"
      access_key: "{{ main_item.0.access_key }}"
      secret_key: "{{ main_item.0.secret_key }}"
      bucket: "{{ main_item.1 }}"
      mode: delete
    loop: "{{ (env.destroy.buckets | default([])) | subelements('names') }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item.1 }}"

###############################################################################
