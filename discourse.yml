- name: Play 01 - Create Cloud Instances
  hosts: main
  tags:
  - init
  - setup
  vars_files: 
  - /home/main/env/env.yml
  - files/settings/discourse/cloud.yml
  - files/settings/discourse/settings.yml
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - include_role: 
      name: 'main_cloud'
    vars: 
      main_cloud_role: '{{ main_item.role }}'
      main_cloud_vars: '{{ main_item.vars }}'
    loop: "{{ settings.cloud.values() | list }}"
    loop_control:
      loop_var: main_item

###############################################################################

- name: Play 02 - Wait for hosts to be ready
  hosts: host
  tags:
  - init
  - setup
  vars_files: 
  - /home/main/env/env.yml
  - files/settings/discourse/cloud.yml
  - files/settings/discourse/settings.yml
  gather_facts: no
  tasks:
  - include_role: 
      name: 'host_test'

###############################################################################

- name: Play 03 - Update the DNS records
  hosts: discourse_web
  tags:
  - never
  - init
  - prepare
  - dns
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 
    
  - name: set the discourse hosts vars
    set_fact: 
      main_web_host: "{{ hostvars[groups[main.discourse.web.group][0]] }}"

  - name: update the discourse site DNS A record
    cloudflare_dns:
      zone: "{{ main.hostname }}"
      proxied: "{{ main.discourse.cf_proxied }}"
      type: A
      solo: true
      record: "{{ main.discourse.subdomain }}"
      value: "{{ main_web_host.ansible_host }}"
      account_email: "{{ main.discourse.cloudflare_email }}"
      account_api_token: "{{ main.discourse.cloudflare_token }}"

  - name: update the discourse DNS email records
    cloudflare_dns:
      zone: "{{ main.hostname }}"
      proxied: no
      type: CNAME
      solo: true
      record: "{{ main_item.host }}"
      value: "{{ main_item.value }}"
      account_email: "{{ main.discourse.cloudflare_email }}"
      account_api_token: "{{ main.discourse.cloudflare_token }}"
    loop: "{{ main.discourse.smtp_dns }}"
    loop_control:
      loop_var: main_item
      label: "{{ main_item.host }}"

  # - name: update the discourse DNS CDN record
  #   cloudflare_dns:
  #     zone: "{{ main.hostname }}"
  #     proxied: "{{ main.discourse.cdn_proxied }}"
  #     solo: true
  #     type: A
  #     record: "{{ main.discourse.cdn_subdomain }}"
  #     value: "{{ main_web_host.ansible_host }}"
  #     account_email: "{{ main.discourse.cloudflare_email }}"
  #     account_api_token: "{{ main.discourse.cloudflare_token }}"

  # - name: update the discourse DNS CDN record
  #   cloudflare_dns:
  #     zone: "{{ main.hostname }}"
  #     proxied: "yes"
  #     solo: true
  #     type: CNAME
  #     record: "{{ main.discourse.cdn_subdomain }}"
  #     value: "{{ main.discourse.subdomain }}.{{ main.hostname }}"
  #     account_email: "{{ main.discourse.cloudflare_email }}"
  #     account_api_token: "{{ main.discourse.cloudflare_token }}"

###############################################################################

- name: Play 04 - Prepare the hosts
  hosts: host
  tags:
  - never
  - init
  - prepare
  - prepare-hosts
  vars_files: 
  - /home/main/env/env.yml
  - files/settings/discourse/cloud.yml
  - files/settings/discourse/settings.yml
  gather_facts: no
  tasks:
  - debug:
      msg: "title: {{ main_item.vars[main_item.role + '_instance_group'] }}"
    loop: "{{ settings.cloud.values() | list }}"
    loop_control:
      loop_var: main_item

  - include_role: 
      name: 'discourse'
    vars:
      discourse_title: "discourse - {{ main_item.vars[main_item.role + '_instance_group'] }}"
      discourse_containers: "{{ main_item.vars.containers }}"
      discourse_host_count: "{{ main_item.vars[main_item.role + '_instance_count'] }}"
    loop: "{{ settings.cloud.values() | list }}"
    loop_control:
      loop_var: main_item

###############################################################################

- name: Play 06 - Prepare machine
  hosts: discourse_web
  tags:
  - never
  - init
  - bootstrap
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env.discourse }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - name: 'prepare the machine (setup)'
    become: yes
    include_role: 
      name: long_run
    vars:
      long_run_title: 'prepare the machine (setup)'
      long_run_become: yes
      long_run_output_path: '{{ main.env_location }}'
      long_run_output_file: 'setup.log'
      long_run_path: '{{ main.location }}'
      long_run_cmd: './discourse-custom-setup'

  # - name: create the directory "{{ main.env_location }}"
  #   file:
  #     path: "{{ main.env_location }}"
  #     state: directory
  #     mode: 0755

  # - name: prepare the machine
  #   become: yes
  #   shell: "./discourse-custom-setup > {{ main.env_location }}/output.log"
  #   args:
  #     chdir: "{{ main.location }}"

###############################################################################

- name: Play 07 - Build and run
  hosts: discourse_web
  tags:
  - never
  - init
  - build
  - run
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env.discourse }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - name: '(re)build and (re)start discourse'
    become: yes
    include_role: 
      name: long_run
    vars:
      long_run_title: '(re)build and (re)start discourse - {{ main_item }}'
      long_run_become: yes
      long_run_output_path: '{{ main.env_location }}'
      long_run_output_file: '{{ main_item }}.log'
      long_run_path: '{{ main.location }}'
      long_run_cmd: './launcher rebuild {{ main_item }}'
    loop: "{{ main.containers }}"
    loop_control:
      loop_var: main_item

  # - name: create the directory "{{ main.env_location }}"
  #   file:
  #     path: "{{ main.env_location }}"
  #     state: directory
  #     mode: 0755

  # - name: set the shell inner command var
  #   set_fact: 
  #     inner_cmd_list: []

  # - name: set the shell inner command var
  #   set_fact: 
  #     inner_cmd_list: "{{ inner_cmd_list + [' ./launcher rebuild ' + main_item + ';'] }}"
  #   loop: "{{ main.containers }}"
  #   loop_control:
  #     loop_var: main_item

  # - name: set the shell command var
  #   set_fact: 
  #     main_cmd: "{ {{ inner_cmd_list | join('') }} } &> {{ main.env_location }}/output.log" 

  # - debug:
  #     msg: 'main_cmd="{{ main_cmd }}"'

  # - name: (re)build and (re)start discourse
  #   become: yes
  #   shell: "{{ main_cmd }}"
  #   args:
  #     chdir: "{{ main.location }}"
  #   async: 3600
  #   poll: 0
  #   register: 'setup'

  # - name: 'Watch {{ main.env_location }}/output.log until the rebuild finishes.'
  #   become: yes
  #   include_role:
  #     name: 'watch'
  #   vars:
  #     watch_file: '{{ main.env_location }}/output.log'
  #     watch_job: 'setup'
  #     watch_timeout: 3600
  #     watch_poll: 5

###############################################################################

- name: Play 08 - Bootstrap the web container
  hosts: discourse_web
  tags:
  - never
  - build-web
  - bootstrap-web
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env.discourse }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - name: 'bootstrap discourse web container'
    become: yes
    include_role: 
      name: long_run
    vars:
      long_run_title: 'bootstrap discourse web container'
      long_run_become: yes
      long_run_output_path: '{{ main.env_location }}'
      long_run_output_file: '{{ main.web_container }}.log'
      long_run_path: '{{ main.location }}'
      long_run_cmd: './launcher bootstrap {{ main.web_container }}'

  # - name: create the directory "{{ main.env_location }}"
  #   file:
  #     path: "{{ main.env_location }}"
  #     state: directory
  #     mode: 0755

  # - name: bootstrap discourse web container
  #   become: yes
  #   shell: "./launcher bootstrap {{ main.web_container }} > {{ main.env_location }}/output.log 2&>1"
  #   args:
  #     chdir: "{{ main.location }}"
  #   async: 3600
  #   poll: 0
  #   register: 'setup'

  # - name: 'Watch {{ main.env_location }}/output.log until the web bootstrap finishes'
  #   become: yes
  #   include_role:
  #     name: 'watch'
  #   vars:
  #     watch_file: '{{ main.env_location }}/output.log'
  #     watch_job: 'setup'
  #     watch_timeout: 3600
  #     watch_poll: 5

###############################################################################

- name: Play 09 - Restart the web container
  hosts: discourse_web
  tags:
  - never
  - build-web
  - restart-web
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env.discourse }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - name: 'restart discourse web container'
    become: yes
    include_role: 
      name: long_run
    vars:
      long_run_title: 'restart discourse web container - {{ main_item }}'
      long_run_become: yes
      long_run_output_path: '{{ main.env_location }}'
      long_run_output_file: '{{ main.web_container }}.log'
      long_run_path: '{{ main.location }}'
      long_run_cmd: './launcher {{ main_item }} {{ main.web_container }}'
    loop: 
    - "stop"
    - "destroy"
    - "start"
    loop_control:
      loop_var: main_item

###############################################################################

- name: Play 10 - Stop Discourse
  hosts: discourse_web
  tags:
  - never
  - stop
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env.discourse }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - name: 'stop discourse containers'
    become: yes
    include_role: 
      name: long_run
    vars:
      long_run_title: 'stop discourse containers - {{ main_item }}'
      long_run_become: yes
      long_run_output_path: '{{ main.env_location }}'
      long_run_output_file: '{{ main_item }}.log'
      long_run_path: '{{ main.location }}'
      long_run_cmd: './launcher stop {{ main_item }}'
    loop: "{{ main.containers[::-1] }}"
    loop_control:
      loop_var: main_item

  # - name: stop discourse
  #   become: yes
  #   command: "./launcher stop app"
  #   args:
  #     chdir: "{{ main.location }}"

###############################################################################

- name: Play 10.1 - Stop Discourse (Test)
  hosts: discourse_web
  tags:
  - never
  - stop2
  vars_files: 
  - /home/main/env/env.yml
  vars:
    main: "{{ env.discourse }}"
  gather_facts: no  
  tasks:  
  - name: Gathering facts
    setup: 

  - name: stop discourse
    become: yes
    command: "./launcher stop {{ main_item }}"
    args:
      chdir: "{{ main.location }}"
    loop: "{{ main.containers[::-1] }}"
    loop_control:
      loop_var: main_item
