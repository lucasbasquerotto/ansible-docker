# Cron File (Tmp)

- name: "{{ cron_inner_title }} - create the temporary directory"
  become: "{{ cron_become }}"
  file:
    state: directory
    path: "{{ cron_node_tmp_dir }}"

- name: "{{ cron_inner_title }} - ensure the crontab file is present"
  become: "{{ cron_become }}"
  copy:
    content: ""
    force: no
    dest: "{{ cron_dest_dir }}/{{ cron_user }}"

- name: "{{ cron_inner_title }} - copy the temporary cron files"
  become: "{{ cron_become }}"
  copy:
    src: "{{ cron_inner_item.src }}"
    dest: "{{ cron_node_tmp_dir }}/{{ cron_inner_item.name }}"
    owner: "{{ cron_user }}"
    group: "{{ cron_user }}"
    mode: 0600
    remote_src: "{{ cron_inner_item.remote_src }}"
  register: diff_hosts_file
  loop:
    - name: "current.cron"
      remote_src: yes
      src: "{{ cron_dest_dir }}/{{ cron_user }}"
    - name: "new.cron"
      remote_src: no
      src: "{{ cron_src_file }}"
  loop_control:
    loop_var: cron_inner_item
    label: "{{ cron_inner_item.name }}"
  changed_when: false

- name: "{{ cron_inner_title }} - remove the comments from cron files"
  become: "{{ cron_become }}"
  lineinfile:
    path: "{{ cron_node_tmp_dir }}/{{ cron_inner_item }}"
    state: absent
    regexp: "^#"
  loop:
    - "current.cron"
    - "new.cron"
  loop_control:
    loop_var: cron_inner_item
  changed_when: false

# Cron File - Update When Changed

- name: "{{ cron_inner_title }} - get the difference of the 2 files (old and current)"
  become: "{{ cron_become }}"
  command: "diff {{ cron_node_tmp_dir + '/current.cron' }} {{ cron_node_tmp_dir + '/new.cron' }}"
  register: cron_diff
  failed_when: cron_diff.rc > 1
  changed_when: cron_diff.rc == 1

- block:
    - name: >-
        {{ cron_inner_title }} - ensure the crontab file is up-to-date
        ({{ cron_dest_dir }}/{{ cron_user }})
      become: "{{ cron_become }}"
      copy:
        src: "{{ cron_src_file }}"
        dest: "{{ cron_dest_dir }}/{{ cron_user }}"
      register: cron_result

    - name: "{{ cron_inner_title }} - ensure the crontab file is active"
      become: "{{ cron_become }}"
      shell: "crontab '{{ cron_dest_dir }}/{{ cron_user }}'"
      when: cron_result is changed

  when: cron_diff.changed
  tags: ["no_print_skipped"]
