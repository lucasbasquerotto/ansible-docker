# Main Vars and Validations

- name: "{{ cloud_node_item_title }} - ensure the inventory contains {{ '[' + cloud_node_name + ']' }}"
  lineinfile:
    name: "{{ inventory_file }}"
    line: "{{ '[' + cloud_node_name + ']' }}"
    state: present
  check_mode: yes
  register: cloud_node_conf
  failed_when: cloud_node_conf is failed
  tags: ["no_print_skipped"]

- name: >-
    {{ cloud_node_item_title }} -
    ensure the inventory contains {{ '[' + cloud_node_name + ']' }}
  fail:
    msg: "Ensure the inventory file contains a line with {{ '[' + cloud_node_name + ']' }}"
  when: cloud_node_conf is changed
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - validate (outer)"
  include_tasks: "tasks/nodes/node_validate.yml"
  vars:
    node_validate_title: "{{ cloud_node_item_title }} - validate"
    node_validate_info: "{{ cloud_node_info }}"
  tags: ["no_print_skipped"]

- name: "{{ cloud_node_item_title }} - cloud_node_node"
  set_fact:
    cloud_node_node: "{{ env.nodes[cloud_node_key] }}"
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - cloud_node_credential"
  set_fact:
    cloud_node_credential: >-
      {{
        env.credentials[cloud_node_node.credential | default('')] | default({})
      }}
  tags: ["no_print"]

### Cloud Node Params ###

- name: "{{ cloud_node_item_title }} - node params (outer)"
  include_tasks: "tasks/nodes/node_params.yml"
  vars:
    node_params_title: "{{ cloud_node_item_title }} - node params"
    node_params_node: "{{ cloud_node_node }}"
    node_params_info: "{{ cloud_node_info }}"
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - cloud_node_params"
  set_fact:
    cloud_node_params: "{{ node_params }}"
  tags: ["no_print"]

# Validate Params

- name: "{{ cloud_node_item_title }} - cloud_node_params_allowed_props"
  set_fact:
    cloud_node_params_allowed_props:
      - "service_params"
      - "dns_service_params"
      - "user_data_file"
      - "user_data_params"
      - "host_test"
      - "cron"
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - validate the node credential allowed props"
  fail:
    msg: |
      Invalid property defined for node parameter
      Property: {{ tmp_item.key }}
      Allowed:
      {{ cloud_node_params_allowed_props | to_nice_yaml }}
      Item Keys:
      {{ cloud_node_params | dict2items | list | to_nice_yaml }}
  when: tmp_item.key not in cloud_node_params_allowed_props
  loop: "{{ cloud_node_params | dict2items | list }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item.key }}"
  tags: ["no_print_skipped"]

- name: "{{ cloud_node_item_title }} - cloud_node_params_required_props"
  set_fact:
    cloud_node_params_required_props:
      - "host_test"
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - validate the node credential required props"
  fail:
    msg: |
      Required property not defined for node parameter
      Property: {{ tmp_item.key }}
      Required:
      {{ cloud_node_params_required_props | to_nice_yaml }}
      Item Keys:
      {{ cloud_node_params | dict2items | list | to_nice_yaml }}
  when: tmp_item.key not in cloud_node_params
  loop: "{{ cloud_node_params_required_props | dict2items | list }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item.key }}"
  tags: ["no_print_skipped"]

### User Data ###

- name: "{{ cloud_node_item_title }} - cloud_node_user_data - initial"
  set_fact:
    cloud_node_user_data: ""
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - cloud_node_user_data - fill (outer)"
  include_tasks: "cloud_node_user_data.yml"
  when: (cloud_node_params.user_data_file | default('')) != ''

### SSH Vars ###

- name: "{{ cloud_node_item_title }} - cloud_node_ssh_key_filename"
  set_fact:
    cloud_node_ssh_key_filename: "{{ cloud_node_name + '.key' }}"
  tags: ["no_print"]

- name: "{{ cloud_node_item_title }} - cloud_node_ssh_key_path"
  set_fact:
    cloud_node_ssh_file: >-
      {{
        cloud_node_credential.ssh_file | default('')
        | ternary(
          env_dir + '/' +
            (cloud_node_credential.ssh_file | default('')),
            ''
          )
      }}
    cloud_node_ssh_key_path: >-
      {{
        ((cloud_node_credential.ssh_file | default('')) != '')
        | ternary(cloud_node_tmp_dir + '/' + cloud_node_ssh_key_filename, '')
      }}
  tags: ["no_print"]

### SSH File ###

- name: >-
    {{ cloud_node_item_title }} - create the ssh key file dir -
    {{ cloud_node_ssh_key_path | dirname }}
  file:
    path: "{{ cloud_node_ssh_key_path | dirname }}"
    state: directory
    mode: 0755
  tags: ["no_print_skipped"]

- name: "{{ cloud_node_item_title }} - generate the ssh key file - {{ cloud_node_ssh_key_path }}"
  copy:
    src: "{{ cloud_node_ssh_file }}"
    dest: "{{ cloud_node_ssh_key_path }}"
    decrypt: "{{ cloud_node_credential.ssh_file_encrypted | default(false) | bool }}"
    mode: 0600
  tags: ["no_print_skipped"]

# Main Service

- name: "{{ cloud_node_item_title }} - run (outer)"
  include_tasks: "cloud_node_run.yml"
  when: (not (cloud_node_info.external | default(false) | bool))
  tags: ["no_print_skipped"]
