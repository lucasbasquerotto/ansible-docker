# Validate Props

- name: "{{ validate_inner_title }} - validate_inner_allowed_props"
  set_fact:
    validate_inner_allowed_props: >-
      {{ validate_inner_schema | dict2items | map(attribute='key') | sort }}
  tags: ["no_print"]

- name: "{{ validate_inner_title }} - validate the allowed props"
  fail:
    msg: |
      Invalid property defined
      Property: {{ tmp_item }}
      Allowed: {{ validate_inner_allowed_props | to_json }}
      Defined: {{
        validate_inner_dict
        | dict2items | map(attribute='key')
        | sort | list | to_json
      }}
  when: tmp_item not in validate_inner_allowed_props
  loop: "{{ env | dict2items | map(attribute='key') | sort | list }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item }}"
  tags: ["no_print_skipped"]

- name: "{{ validate_inner_title }} - validate the required props"
  fail:
    msg: |
      Required property not defined: {{ tmp_item }}
      Defined properties: {{
        validate_inner_dict
        | dict2items | map(attribute='key')
        | sort | list | to_json
      }}
  vars:
    validate_inner_prop: "{{ validate_inner_schema[tmp_item] }}"
  when: >-
    (validate_inner_prop.required | default(false) | bool)
    and
    (tmp_item not in validate_inner_dict)
  loop: "{{ validate_inner_allowed_props }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item }}"
  tags: ["no_print_skipped"]

- name: "{{ validate_inner_title }} - validate the props values (outer)"
  include_tasks: "tasks/validate/elem.yml"
  vars:
    validate_inner_prop: "{{ validate_inner_schema[validate_inner_item] }}"
    validate_elem_title: "{{ validate_inner_title }} - validate the prop [{{ validate_inner_item }}]"
    validate_elem_type: "{{ validate_inner_prop.type | default('') }}"
    validate_elem_value: "{{ validate_inner_dict[validate_inner_item] }}"
    validate_elem_schema: "{{ validate_inner_prop.schema | default('') }}"
  when: validate_inner_dict[validate_inner_item] is defined
  loop: "{{ validate_inner_allowed_props }}"
  loop_control:
    loop_var: validate_inner_item
    label: "{{ validate_inner_item }}"

# Validate the schema list properties

- name: "{{ validate_inner_title }} - validate the props with elem_type (valid type)"
  fail:
    msg: |
      List property has an invalid element type: {{ tmp_item }}
      Element type: {{ validate_inner_prop.elem_type | default('') }}
      Valid types: {{ tmp_valid | to_json }}
  vars:
    tmp_valid: ['string', 'primitive'])
    validate_inner_prop: "{{ validate_inner_schema[tmp_item] }}"
  when: >-
    (validate_inner_dict[tmp_item] is defined)
    and
    ((validate_inner_prop.type | default('')) == 'list')
    and
    ((validate_inner_prop.elem_type | default('')) != '')
    and
    ((validate_inner_prop.elem_type | default('')) not in tmp_valid)
  loop: "{{ validate_inner_allowed_props }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item }}"

- name: "{{ validate_inner_title }} - validate the props with schemas (valid type)"
  fail:
    msg: >-
      List property has a schema and a primitive element type: {{ tmp_item }}
      (choose one)
  vars:
    validate_inner_prop: "{{ validate_inner_schema[tmp_item] }}"
  when: >-
    (validate_inner_dict[tmp_item] is defined)
    and
    ((validate_inner_prop.type | default('')) == 'list')
    and
    ((validate_inner_prop.elem_type | default('')) != '')
    and
    ((validate_inner_prop.elem_schema | default('')) != '')
  loop: "{{ validate_inner_allowed_props }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item }}"
