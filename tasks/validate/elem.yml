# Validate the schema properties

- name: "{{ validate_elem_title }} - validate the type and schema (required)"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> hasn't a schema and a type (should have one)"
  when: >-
    (validate_elem_type == '')
    and
    (validate_elem_schema == '')
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the type and schema (only one)"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> has a schema and a type (should have only one)"
  when: >-
    (validate_elem_type != '')
    and
    (validate_elem_schema != '')
  tags: ["no_print_skipped"]

# Validate the type

- name: "{{ validate_elem_title }} - validate the type"
  fail:
    msg: |
      Value <{{ validate_elem_ctx }}> has a schema but hasn't a valid type
      Type: {{ validate_elem_type }}
      Valid types: {{ tmp_valid | to_json }}
  vars:
    tmp_valid: ["unknown", "list", "dict", "string_or_dict"]
  when: >-
    (validate_elem_type != '')
    and
    (validate_elem_type not in tmp_valid)
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the string values"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> should be a string"
  when: >-
    (validate_elem_type == 'string')
    and
    (not (validate_elem_value is string))
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the primitive values"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> should be a primitive"
  when: >-
    (validate_elem_type == 'primitive')
    and
    (
      (validate_elem_value is mapping)
      or
      (
        (validate_elem_value is iterable)
        and
        (validate_elem_value is not string)
      )
    )
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the list values"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> should be a list"
  when: >-
    (validate_elem_type == 'list')
    and
    (not (
      (validate_elem_value is not mapping)
      and
      (validate_elem_value is iterable)
      and
      (validate_elem_value is not string)
    ))
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the dictionary values"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> should be a dictionary"
  when: >-
    (validate_elem_type == 'dict')
    and
    (validate_elem_value is not mapping)
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the string or dictionary values"
  fail:
    msg: "Value <{{ validate_elem_ctx }}> should be a dictionary"
  when: >-
    (validate_elem_type == 'string_or_dict')
    and
    (validate_elem_value is not mapping)
    and
    (validate_elem_value is not string)
  tags: ["no_print_skipped"]

# Add schema to the next iteration

- name: "{{ validate_elem_title }} - add schema to the next iteration"
  set_fact:
    validate_schema_list: >-
      {{ validate_schema_list + [tmp_info_item] }}
  vars:
    tmp_info_item:
      schema: "{{ validate_elem_schema }}"
      value: "{{ validate_elem_value }}"
      ctx: "{{ validate_elem_ctx }}"
  when: validate_elem_schema != ''
  tags: ["no_print"]
