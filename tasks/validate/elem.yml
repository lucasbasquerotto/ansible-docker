- name: "{{ validate_elem_title }} - validate the string values"
  fail:
    msg: "Value should be a string"
  when: >-
    (validate_elem_type == 'string')
    and
    (not (validate_elem_value is string))
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the primitive values"
  fail:
    msg: "Value should be a primitive"
  when: >-
    (validate_elem_value is defined)
    and
    (validate_elem_type == 'primitive')
    and
    (
      (validate_elem_value is mapping)
      or
      (
        (validate_elem_value is iterable)
        and
        (validate_elem_value is not string)
      )
    )
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the list values"
  fail:
    msg: "Value should be a list"
  when: >-
    (validate_elem_value is defined)
    and
    (validate_elem_type == 'list')
    and
    (not (
      (validate_elem_value is not mapping)
      and
      (validate_elem_value is iterable)
      and
      (validate_elem_value is not string)
    ))
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the dictionary values"
  fail:
    msg: "Value should be a dictionary"
  when: >-
    (validate_elem_value is defined)
    and
    (validate_elem_type == 'dict')
    and
    (validate_elem_value is not mapping)
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the string or dictionary values"
  fail:
    msg: "Value should be a dictionary"
  when: >-
    (validate_elem_value is defined)
    and
    (validate_elem_type == 'string_or_dict')
    and
    (validate_elem_value is not mapping)
    and
    (validate_elem_value is not string)
  tags: ["no_print_skipped"]

# Validate the schema properties

- name: "{{ validate_elem_title }} - validate the values with schemas (required type)"
  fail:
    msg: "Value has a schema but hasn't a type"
  when: >-
    (validate_elem_value is defined)
    and
    (validate_elem_type == '')
    and
    (validate_elem_schema != '')
  tags: ["no_print_skipped"]

- name: "{{ validate_elem_title }} - validate the values with schemas (valid type)"
  fail:
    msg: |
      Property has a schema but hasn't a valid type
      Type: {{ validate_elem_type }}
      Valid types: {{ tmp_valid | to_json }}
  vars:
    tmp_valid: ["list", "dict", "string_or_dict"]
  when: >-
    (validate_elem_value is defined)
    and
    (validate_elem_type not in tmp_valid)
    and
    (validate_elem_schema != '')
  tags: ["no_print_skipped"]
