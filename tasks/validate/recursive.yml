# Load the Schema

- name: "{{ validate_recursive_title }} - current schema - validate_recursive_error_msgs"
  set_fact:
    validate_recursive_error_msgs: []
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - current schema - block"
  block:
    - name: "{{ validate_recursive_title }} - current schema"
      set_fact:
        validate_schema_info: "{{ validate_schema_list[validate_schema_idx | int] }}"
      tags: ["no_print"]

    - name: "{{ validate_recursive_title }} - ctx [{{ validate_schema_info.ctx }}] - validate_recursive_new_title"
      set_fact:
        validate_recursive_new_title: "{{ validate_recursive_title }} - ctx [{{ validate_schema_info.ctx }}]"
      tags: ["no_print"]

    - name: "{{ validate_recursive_new_title }} - validate the allowed schema props"
      set_fact:
        validate_recursive_error_msgs: >-
          {{ validate_recursive_error_msgs + [tmp_msg] }}
      vars:
        tmp_msg: >-
          [{{ validate_schema_info.schema | default('') }}] Schema not defined
          (at <{{ validate_recursive_ctx }}>)
      when: (validate_schema_info.schema | default('')) not in (validate_schema_dict | default({}))
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - validate_recursive_schema_info"
      set_fact:
        validate_recursive_value: "{{ validate_schema_info.value }}"
        validate_recursive_ctx: "{{ validate_schema_info.ctx }}"
        validate_recursive_schema_name: "{{ validate_schema_info.schema }}"
        validate_recursive_schema_info: "{{ validate_schema_dict[validate_schema_info.schema] }}"
      tags: ["no_print"]

    - name: "{{ validate_recursive_new_title }} - validate_recursive_type"
      set_fact:
        validate_recursive_type: "{{ validate_recursive_schema_info.type | default('') }}"
      tags: ["no_print"]

    - name: "{{ validate_recursive_new_title }} - validate_recursive_type"
      set_fact:
        validate_recursive_is_group: "{{ validate_recursive_type in ['map', 'list'] }}"
        validate_recursive_is_dict: >-
          {{
            (validate_recursive_type == 'dict')
            or
            (validate_recursive_type == 'string_or_dict')
          }}
        validate_recursive_is_primitive: >-
          {{ validate_recursive_type not in ['map', 'list', 'dict', 'string_or_dict'] }}
      tags: ["no_print"]

    # Validate Props

    - name: "{{ validate_recursive_new_title }} - validate the allowed schema props"
      set_fact:
        validate_recursive_error_msgs: >-
          {{ validate_recursive_error_msgs + [tmp_msg] }}
      vars:
        tmp_msg: >-
          [{{ validate_recursive_schema_name }}] Schema type not defined at
          <{{ validate_recursive_ctx }}>
      when: validate_recursive_type == ''
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - validate_group_error_msgs - initial"
      set_fact:
        validate_group_error_msgs: []
      tags: ["no_print"]

    - name: "{{ validate_recursive_new_title }} - validate group (outer)"
      include_tasks: "tasks/validate/group.yml"
      vars:
        validate_group_title: >-
          {{ validate_recursive_new_title }} - current element - group
          - schema [{{ validate_recursive_schema_name }}]
        validate_group_ctx: "{{ validate_recursive_ctx }}"
        validate_group_value: "{{ validate_recursive_value }}"
        validate_group_schema_info: "{{ validate_recursive_schema_info }}"
      when: validate_recursive_is_group | bool
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - group errors"
      set_fact:
        validate_recursive_error_msgs: >-
          {{ validate_recursive_error_msgs + [validate_group_error_msgs] }}
      when: (validate_group_error_msgs | length) > 0
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - validate_dict_error_msgs - initial"
      set_fact:
        validate_dict_error_msgs: []
      tags: ["no_print"]

    - name: "{{ validate_recursive_new_title }} - validate dict (outer)"
      include_tasks: "tasks/validate/dict.yml"
      vars:
        validate_dict_title: >-
          {{ validate_recursive_new_title }} - current element - dictionary
          - schema [{{ validate_recursive_schema_name }}]
        validate_dict_ctx: "{{ validate_recursive_ctx }}"
        validate_dict_value: "{{ validate_recursive_value }}"
        validate_dict_schema_info: "{{ validate_recursive_schema_info }}"
      when: validate_recursive_is_dict | bool
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - dictionary errors"
      set_fact:
        validate_recursive_error_msgs: >-
          {{ validate_recursive_error_msgs + [validate_dict_error_msgs] }}
      when: (validate_dict_error_msgs | length) > 0
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - validate primitive props (block)"
      block:
        - name: "{{ validate_recursive_new_title }} - validate_recursive_allowed_props"
          set_fact:
            validate_recursive_allowed_props:
              - "type"
              - "non_empty"
              - "allowed_values"
          tags: ["no_print"]

        - name: "{{ validate_recursive_new_title }} - validate the allowed schema props"
          set_fact:
            validate_recursive_error_msgs: >-
              {{ validate_recursive_error_msgs + [tmp_msg] }}
          vars:
            tmp_msg: |
              Invalid property defined for the schema.
              Schema: {{ validate_recursive_schema_name }}
              Type: {{ validate_prop_type }}
              Context: {{ validate_recursive_ctx }}
              Property: {{ tmp_item }}
              Allowed: {{ validate_recursive_allowed_props | to_json }}
          when: tmp_item not in validate_recursive_allowed_props
          loop: "{{ validate_recursive_schema_info | dict2items | map(attribute='key') | sort | list }}"
          loop_control:
            loop_var: tmp_item
            label: "{{ tmp_item }}"
          tags: ["no_print_skipped"]
      when: validate_recursive_is_primitive | bool

    - name: "{{ validate_recursive_new_title }} - validate_elem_error_msgs - initial"
      set_fact:
        validate_elem_error_msgs: []
      tags: ["no_print"]

    - name: "{{ validate_recursive_new_title }} - validate element (outer)"
      include_tasks: "tasks/validate/elem.yml"
      vars:
        validate_elem_title: >-
          {{ validate_recursive_new_title }} - current element - primitive
          - schema [{{ validate_recursive_schema_name }}]
        validate_elem_ctx: "{{ validate_recursive_ctx }}"
        validate_elem_type: "{{ validate_recursive_type }}"
        validate_elem_schema: ""
        validate_elem_value: "{{ validate_recursive_value }}"
        validate_elem_non_empty: "{{ validate_recursive_schema_info.non_empty | default(false) }}"
        validate_elem_allowed_values: >-
          {{ validate_recursive_schema_info.allowed_values | default([]) }}
      when: validate_recursive_is_primitive | bool
      tags: ["no_print_skipped"]

    - name: "{{ validate_recursive_new_title }} - elem errors"
      set_fact:
        validate_recursive_error_msgs: >-
          {{ validate_recursive_error_msgs + [validate_elem_error_msgs] }}
      when: (validate_elem_error_msgs | length) > 0
      tags: ["no_print_skipped"]

  when: (validate_recursive_error_msgs | length) == 0

# Next Schema

- name: "{{ validate_recursive_new_title }} - increment index"
  set_fact:
    validate_schema_idx: "{{ (validate_schema_idx | int) + 1 }}"
    validate_schema_error_msgs: >-
      {{ validate_schema_error_msgs + validate_recursive_error_msgs }}
  tags: ["no_print"]

- name: "{{ validate_recursive_new_title }} - next schema"
  include_tasks: "tasks/validate/recursive.yml"
  when: (validate_schema_idx | int) < (validate_schema_list | length)
