# Load the Schema

- name: "{{ validate_title }} - current schema"
  set_fact:
    validate_schema_info: "{{ validate_schema_list[validate_schema_idx] }}"
  tags: ["no_print"]

- name: "{{ validate_title }} - ctx [{{ validate_schema_info.ctx }}] - validate_recursive_title"
  set_fact:
    validate_recursive_title: "{{ validate_title }} - ctx [{{ validate_schema_info.ctx }}]"
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate_recursive_schema"
  set_fact:
    validate_recursive_value: "{{ validate_schema_info.value }}"
    validate_recursive_ctx: "{{ validate_schema_info.ctx }}"
    validate_recursive_schema_name: "{{ validate_schema_info.schema }}"
    validate_recursive_schema: "{{ validate_schema_dict[validate_schema_info.schema] }}"
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate_recursive_type"
  set_fact:
    validate_recursive_type: "{{ validate_recursive_schema.type | default('') }}"
  tags: ["no_print"]

# Validate Props

- name: "{{ validate_recursive_title }} - validate the allowed schema props"
  fail:
    msg: "[{{ validate_recursive_schema_name }}] Schema type not defined"
  when: validate_recursive_type == ''
  tags: ["no_print_skipped"]

- name: "{{ validate_recursive_title }} - validate_recursive_allowed_props"
  set_fact:
    validate_recursive_allowed_props:
      - "type"
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate_recursive_allowed_props"
  set_fact:
    validate_recursive_allowed_props:
      - "type"
      - "elem_type"
      - "elem_schema"
  when: validate_recursive_type == 'list'
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate_recursive_allowed_props"
  set_fact:
    validate_recursive_allowed_props:
      - "type"
      - "any_props"
      - "props"
  when: validate_recursive_type in ['dict', 'string_or_dict']
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate the allowed schema props"
  fail:
    msg: |
      Invalid property defined for the schema (type {{ validate_recursive_type }}).
      Schema: {{ validate_recursive_schema_name }}
      Property: {{ tmp_item }}
      Allowed: {{ validate_recursive_allowed_props | to_json }}
  when: tmp_item not in validate_recursive_allowed_props
  loop: "{{ validate_recursive_schema | dict2items | map(attribute='key') | sort | list }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_item }}"
  tags: ["no_print_skipped"]

- name: "{{ validate_recursive_title }} - validate the allowed schema props"
  fail:
    msg: >-
      [{{ validate_recursive_schema_name }}] Schema has elem_type
      and elem_schema properties (choose only one)"
  when: >-
    (validate_recursive_schema.elem_type is defined)
    and
    (validate_recursive_schema.elem_schema is defined)
  tags: ["no_print_skipped"]

- name: "{{ validate_recursive_title }} - validate the allowed schema props"
  fail:
    msg: >-
      [{{ validate_recursive_schema_name }}] Schema has any_props (= true)
      and any_props properties (choose only one)"
  when: >-
    (validate_recursive_schema.any_props | default(false) | bool)
    and
    (validate_recursive_schema.props is defined)
  tags: ["no_print_skipped"]

- name: "{{ validate_recursive_title }} - validate the current element"
  include_tasks: "tasks/validate/elem.yml"
  vars:
    validate_elem_title: >-
      {{ validate_recursive_title }} - current element
      - schema [{{ validate_recursive_schema_name }}]
    validate_elem_ctx: "{{ validate_recursive_ctx }}"
    validate_elem_type: "{{ validate_recursive_type }}"
    validate_elem_schema: ""
    validate_elem_value: "{{ validate_recursive_value }}"
  tags: ["no_print_skipped"]

- name: "{{ validate_recursive_title }} - validate_recursive_allowed_props"
  set_fact:
    validate_recursive_value_list: []
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate_recursive_allowed_props"
  set_fact:
    validate_recursive_value_list: "{{ validate_recursive_value }}"
  when: validate_recursive_type == 'list'
  tags: ["no_print"]

- name: "{{ validate_recursive_title }} - validate the list items"
  include_tasks: "tasks/validate/elem.yml"
  vars:
    validate_elem_title: >-
      {{ validate_recursive_title }} - list item
      - list schema [{{ validate_recursive_schema_name }}]
    validate_elem_ctx: "{{ validate_recursive_ctx }}[{{ validate_recursive_idx }}]"
    validate_elem_type: "{{ validate_recursive_item.elem_type | default('') }}"
    validate_elem_schema: "{{ validate_recursive_item.elem_schema | default('') }}"
    validate_elem_value: "{{ validate_recursive_item }}"
  loop: "{{ validate_recursive_value_list }}"
  loop_control:
    loop_index: validate_recursive_idx
    loop_var: validate_recursive_item
    label: "{{ validate_recursive_idx }}"

# TODO

- name: "{{ validate_recursive_title }} - validate the list items"
  include_tasks: "tasks/validate/dict.yml"
  vars:
    validate_dict_title: >-
      {{ validate_recursive_title }}
      - dict schema [{{ validate_recursive_schema_name }}]
    validate_dict_ctx: "{{ validate_recursive_ctx }}"
    validate_dict_props: "{{ validate_recursive_item.props | default({}) }}"
    validate_elem_schema: "{{ validate_recursive_item.elem_schema | default('') }}"
    validate_elem_value: "{{ validate_recursive_item }}"
  when: (validate_recursive_value is mapping) and (not (validate_recursive_item.any_props | default(false) | bool))
  loop: "{{ validate_recursive_value.props | default({}) }}"
  loop_control:
    loop_index: validate_recursive_idx
    loop_var: validate_recursive_item
    label: "{{ validate_recursive_idx }}"
