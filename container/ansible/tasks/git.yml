- name: "{{ git_title | default('') }} - validate the git task parameters"
  fail:
    msg: "{{ git_item }} not specified"
  when: (lookup('vars', git_item) | default('')) == ''
  loop:
  - "git_title"
  - "git_repo"
  - "git_ssh_src_dir"
  - "git_secrets_dir"
  - "git_repo_dir"
  loop_control:
    loop_var: git_item

- name: "{{ git_title }} - validate the git repo properties"
  fail:
    msg: "{{ git_item }} not specified in git_repo"
  when: (git_repo[git_item] | default('')) == ''
  loop:
  - "src"
  - "version"
  loop_control:
    loop_var: git_item

- name: "{{ git_title }} - git_ssh_file"
  set_fact:
    git_ssh_file: >-
      {{
        (git_repo.ssh_file | default('') != '')
        | ternary(git_secrets_dir + '/ssh.key', '')
      }}
  tags: ["no_print"]

- name: "{{ git_title }} - create the directories"
  file:
    path: "{{ git_item }}"
    state: directory
    mode: "{{ env_dev | bool | ternary(0777, 0755) }}"
  when: git_item.when | default(true) | bool
  loop:
  - { dir: "{{ git_ssh_src_dir }}", when: "{{ git_ssh_file != '' }}" }
  - { dir: "{{ git_secrets_dir }}", when: "{{ git_ssh_file != '' }}" }
  - { dir: "{{ git_repo_dir }}" }
  loop_control:
    loop_var: git_item
    label: "{{ git_item.dir }}"

- name: "{{ git_title }} - copy the repo ssh file"
  copy:
    src: "{{ git_ssh_src_dir }}/{{ git_repo.ssh_file }}"
    dest: "{{ git_ssh_file }}"
    decrypt: "{{ git_repo.ssh_file_encrypted | default(false) | bool }}"
    mode: 0600
  when: git_ssh_file != ''

- name: "{{ git_title }} - git"
  git:
    repo: "{{ git_repo.src }}"
    version: "{{ git_repo.version }}"
    key_file: "{{ git_ssh_file | default(omit, true) }}"
    accept_hostkey: yes
    dest: "{{ git_repo_dir }}"
    update: "{{ env_dev | bool | ternary('no', 'yes') }}"
    force: no