root: "env"
schemas:
  env:
    type: "dict"
    lax: true
    description: "environment minimal schema for a deployment / project"
    props:
      name:
        non_empty: true
        type: "str"
        description: "name of the project"
      ctxs:
        required: true
        type: "list"
        elem_type: "str"
        description: "list with the context names that will be executed for this deployment"
      migration:
        type: "str"
        description: >-
          migration identifier; when specified, throws an error if
          it's not specified in the controller parameters, or is different
      container:
        type: "str"
        description: >-
          container image + tag that identifies the container in which
          the deployment will execute; when specified, throws an error if
          it's not specified in the controller parameters, or is different
      ctl_env_schema:
        type: "str"
        description: >-
          schema to validate the environment parameters defined for the project
          in the main environment repository vars.yml file when defined in the
          project environment repository file; will be applied for all contexts
      original_env_schema:
        type: "str"
        description: >-
          schema to validate the environment parameters defined for the project
          in the project environment repository file when defined in the base
          environment repository file; will be applied for all contexts
      cloud:
        schema: "cloud"
        description: >-
          cloud section; used to extend the contexts in the main section,
          when extend_cloud is true
      main:
        non_empty: true
        type: "map"
        elem_key_regex: "^[-\\w]+$"
        elem_schema: "main"
        description: "dictionary with the environment contexts (that define the deployment)"
      repos:
        type: "map"
        non_empty: true
        elem_key_regex: "^[-\\w]+$"
        elem_schema: "repo"
        elem_non_empty: true
        description: "dictionary with definitions of source control repositories"
  cloud:
    type: "dict"
    lax: true
    description: >-
      cloud section schema; used to extend the contexts in the main section,
      when extend_cloud is true
    props:
      repo:
        type: "str"
        description: "repository name of the cloud layer"
      ext_repos:
        type: "list"
        elem_schema: "repo_info"
        description: >-
          list with repository names that extends the main repository of the cloud
          layer and the directories in which the repositories will be cloned
          (relative to the cloud repository)
      collections:
        type: "list"
        elem_schema: "collection"
        description: >-
          list of collections that specifies paths to collections, relative to the
          cloud repository directory, the namespace and, optionally, the collection
          name, so that a symlink pointing to the actual collection (or namespace)
          directory is created, making possible the use of the collection in the
          cloud context steps
      run_file:
        type: "str"
        description: >-
          path, relative to the cloud repository, in which the file to run the
          cloud context steps is located
  main:
    type: "dict"
    lax: true
    description: "context minimal schema"
    props:
      extend_cloud:
        type: "bool"
        description: >-
          when true, the properties defined in the cloud section are used
          when the corresponding property is not present in this section
      repo:
        type: "str"
        description: "repository name of the cloud layer"
      ext_repos:
        type: "list"
        elem_schema: "repo_info"
        description: >-
          list with repository names that extends the main repository of the cloud
          layer and the directories in which the repositories will be cloned
          (relative to the cloud repository)
      collections:
        type: "list"
        elem_schema: "collection"
        description: >-
          list of collections that specifies paths to collections, relative to the
          cloud repository directory, the namespace and, optionally, the collection
          name, so that a symlink pointing to the actual collection (or namespace)
          directory is created, making possible the use of the collection in the
          cloud context steps
      run_file:
        type: "str"
        description: >-
          path, relative to the cloud repository, in which the file to run the
          cloud context steps is located
      ctl_env_schema:
        type: "str"
        description: >-
          schema to validate the environment parameters defined for the project
          in the main environment repository vars.yml file when defined in the
          project environment repository file; will be applied only for this context
      original_env_schema:
        type: "str"
        description: >-
          schema to validate the environment parameters defined for the project
          in the project environment repository file when defined in the base
          environment repository file; will be applied only for this context
  repo_info:
    type: "dict"
    description: "mapped repository (relative to a location) schema"
    props:
      repo:
        non_empty: true
        type: "str"
        description: "repository name"
      dir:
        non_empty: true
        type: "str"
        description: "path to directory in which the repository will be cloned"
  collection:
    type: "dict"
    description: "hooks schema"
    props:
      namespace:
        type: "str"
        non_empty: true
        regex: "^[-\\w]+$"
        description: "the collection namespace"
      collection:
        type: "str"
        regex: "^[-\\w]+$"
        description: "the collection name"
      path:
        type: "str"
        non_empty: true
        description: "path to the collection, relative to the cloud repository directory"
      mode:
        type: "str"
        regex: "^([0-7]{3})?$"
        description: "the permissions the resulting symlink should have"
      dir_mode:
        type: "str"
        regex: "^([0-7]{3})?$"
        description: "the permissions the resulting symlink parent directory should have"
      absent:
        type: "bool"
        description: "when true, the symlink will be removed, if present"
  repo:
    type: "dict"
    description: "repository schema"
    props:
      src:
        non_empty: true
        type: "str"
        description: "repository source"
      version:
        type: "str"
        description: "repository version"
      ssh_file:
        type: "str"
        description: "repository ssh file (used for authentication)"
